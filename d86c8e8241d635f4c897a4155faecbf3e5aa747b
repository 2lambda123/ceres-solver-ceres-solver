{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b88ce1ce_6a7f8c84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T21:32:18Z",
      "side": 1,
      "message": "Sergiu, thanks for taking this on. I am going to take a careful look, but I have to say I am surprised by the intrusive nature of this patch. What versions of MSVC is this a problem for?",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "048670ea_9981e242",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T21:53:36Z",
      "side": 1,
      "message": "This is with the latest Visual Studio 17 2022.",
      "parentUuid": "b88ce1ce_6a7f8c84",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23c95990_08177df5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:02:54Z",
      "side": 1,
      "message": "so this macro expansion problem exists in the latest version of MSVC? wow. \nis there an MSVC recommended solution to this problem?\n\nI started reviewing the patch thinking it was about max/min I was surprised by the other changes. its fine to include them one patch which fixes all sorts of MSVC issues.",
      "parentUuid": "048670ea_9981e242",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f4755a6_cc83d617",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:08:19Z",
      "side": 1,
      "message": "The are three possible solutions to the min/max problem:\n(1) Don\u0027t include windows.h (typically, impossible to prevent)\n(2) Define NOMINMAX. Fixes the problem locally (within project) but may have unwanted side-effects on user code that relies on min/max macro availability. NOMINMAX propagation to a library\u0027s dependencies can cause the same problems.\n(3) Prevent macro substitution (this solution)\n\n(3) is most robust, (2) is less intrusive but can still break.",
      "parentUuid": "23c95990_08177df5",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59fa0ec2_785788bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:25:16Z",
      "side": 1,
      "message": "Regarding floating-point comparisons I submitted an issue: https://github.com/microsoft/STL/issues/2562",
      "parentUuid": "9f4755a6_cc83d617",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d184183f_f8925356",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:34:55Z",
      "side": 1,
      "message": "I am out for the rest of the day, I will take a look tomorrow morning at your next revisions.",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2978e8ce_7a0d7b6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-12T11:55:34Z",
      "side": 1,
      "message": "To clarify (2) what I mean is that a library should not impose `NOMINMAX` on its consumers because Ceres could otherwise break its direct or indirect dependencies. However, this is essential to avoid compilation errors caused by Ceres\u0027 headers. This is why, in my opinion, (2) is impractical. If users want to use `min`/`max` functions from Ceres, e.g., those defined for `Jet` currently causing problems, they will need to take care of a fix themselves. Ceres solver has no way of knowing which fix is applicable/practical in a particular case and therefore the library should be neutral in regard to user\u0027s choice of the fix.\n\nOn a related note, I would like to contribute Github workflows to catch such problems early in the development (Travis builds seem to be dead). However, since the development does not happen on Github, the continuous integration will not guard against broken commits. Is there a possibility to sync CLs to Github to ensure the patches actually work?",
      "parentUuid": "59fa0ec2_785788bd",
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b5c7303_dab205e1",
        "filename": "include/ceres/internal/householder_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T21:44:46Z",
      "side": 1,
      "message": "this seems unrelated to this patch.",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 16
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe6b499a_dec42fee",
        "filename": "include/ceres/internal/householder_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T21:53:36Z",
      "side": 1,
      "message": "This is MSVC specific. Clang and GCC are happy with the original implementation.",
      "parentUuid": "7b5c7303_dab205e1",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 16
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "271e619c_fa181752",
        "filename": "include/ceres/internal/householder_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fe6b499a_dec42fee",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 16
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b9751f0_84ca1e72",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T21:44:46Z",
      "side": 1,
      "message": "why is cmake being modified for this patch?",
      "range": {
        "startLine": 406,
        "startChar": 28,
        "endLine": 406,
        "endChar": 34
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54d9a2cf_a948d909",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T21:53:36Z",
      "side": 1,
      "message": "There are otherwise various linker errors which prevent MSVC from compiling successfully. I intended to fix the build as a whole not only specific errors.",
      "parentUuid": "4b9751f0_84ca1e72",
      "range": {
        "startLine": 406,
        "startChar": 28,
        "endLine": 406,
        "endChar": 34
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eddfd858_0f65ac55",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "54d9a2cf_a948d909",
      "range": {
        "startLine": 406,
        "startChar": 28,
        "endLine": 406,
        "endChar": 34
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db4279f9_0b648a9d",
        "filename": "internal/ceres/canonical_views_clustering.cc",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "why are you able to use brackets here but not above?",
      "range": {
        "startLine": 125,
        "startChar": 52,
        "endLine": 125,
        "endChar": 58
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6ff87b3_9b39cf71",
        "filename": "internal/ceres/canonical_views_clustering.cc",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:20:16Z",
      "side": 1,
      "message": "No specific reason. I started using the macro mechanism until I stumbled upon this case (max/min within a macro).",
      "parentUuid": "db4279f9_0b648a9d",
      "range": {
        "startLine": 125,
        "startChar": 52,
        "endLine": 125,
        "endChar": 58
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "327ad57a_57dfbf80",
        "filename": "internal/ceres/canonical_views_clustering.cc",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:34:55Z",
      "side": 1,
      "message": "in which case would it be reasonable to just use the () solution instead of introducing one more macro?",
      "parentUuid": "d6ff87b3_9b39cf71",
      "range": {
        "startLine": 125,
        "startChar": 52,
        "endLine": 125,
        "endChar": 58
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "284a58cb_2d51ac38",
        "filename": "internal/ceres/canonical_views_clustering.cc",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:47:55Z",
      "side": 1,
      "message": "AFAIK, in cases where ADL does not matter. Boost prefers the macro variant:\n* https://github.com/boostorg/config/blob/6d0155659c3ab4a85ad313f6dfb1bc46942726ca/include/boost/config/detail/suffix.hpp#L358-L381\n* https://github.com/boostorg/units/blob/45787015dd8c11653eb988260acf05c4af9d42e5/include/boost/units/cmath.hpp\nfor some examples.",
      "parentUuid": "327ad57a_57dfbf80",
      "range": {
        "startLine": 125,
        "startChar": 52,
        "endLine": 125,
        "endChar": 58
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3807b0f3_3921371f",
        "filename": "internal/ceres/dense_cholesky_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T21:44:46Z",
      "side": 1,
      "message": "should be its own patch.",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4737bb14_00459e69",
        "filename": "internal/ceres/dense_cholesky_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T21:53:36Z",
      "side": 1,
      "message": "This also MSVC specific.",
      "parentUuid": "3807b0f3_3921371f",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9115f2e_32ddfa96",
        "filename": "internal/ceres/dense_cholesky_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4737bb14_00459e69",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f92b7c0e_532bf28b",
        "filename": "internal/ceres/gmock_main.cc",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T21:44:46Z",
      "side": 1,
      "message": "why do we need to modify this here? also this is an autogenerated file coming from outside ceres.",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 18
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75f97778_bfecd1d1",
        "filename": "internal/ceres/gmock_main.cc",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T21:53:36Z",
      "side": 1,
      "message": "If gflags is built as a static library and Ceres as shared one, linking will fail.",
      "parentUuid": "f92b7c0e_532bf28b",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 18
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c58c993_b1da50e9",
        "filename": "internal/ceres/gmock_main.cc",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "is this fixed upstream? should we update our version of gtest? it would be odd to carry this change ourselves here.",
      "parentUuid": "75f97778_bfecd1d1",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 18
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77938748_1889b439",
        "filename": "internal/ceres/gmock_main.cc",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:18:42Z",
      "side": 1,
      "message": "I don\u0027t think this is an upstream problem. The logic seems to be the following:\nif gflags is compiled as a static library, it will assume that defining the corresponding flags is only done within a static library. This is however not generally the case. gflags on Linux seems to be more forgiving because its symbols are always visible. gflags also explicitly allows overreding the export/import mechanism presumably for such cases.",
      "parentUuid": "8c58c993_b1da50e9",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 18
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c68d30aa_ecb2f366",
        "filename": "internal/ceres/gmock_main.cc",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:34:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "77938748_1889b439",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 18
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "467b6079_806f903b",
        "filename": "internal/ceres/rotation_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "why change the case for this?",
      "range": {
        "startLine": 91,
        "startChar": 7,
        "endLine": 91,
        "endChar": 11
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d764625d_9c83fc60",
        "filename": "internal/ceres/rotation_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:18:42Z",
      "side": 1,
      "message": "Heh, near (and far) are also macros (for ancient pascal calling conventions) :) Changing the case is a simple workaround.",
      "parentUuid": "467b6079_806f903b",
      "range": {
        "startLine": 91,
        "startChar": 7,
        "endLine": 91,
        "endChar": 11
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f384f2ba_2a147be1",
        "filename": "internal/ceres/rotation_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:34:55Z",
      "side": 1,
      "message": "make it is_near to respect google variable conventions please.",
      "parentUuid": "d764625d_9c83fc60",
      "range": {
        "startLine": 91,
        "startChar": 7,
        "endLine": 91,
        "endChar": 11
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c8c688f_af611864",
        "filename": "internal/ceres/rotation_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T22:47:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f384f2ba_2a147be1",
      "range": {
        "startLine": 91,
        "startChar": 7,
        "endLine": 91,
        "endChar": 11
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1290358_50fcf066",
        "filename": "internal/ceres/test_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T21:44:46Z",
      "side": 1,
      "message": "this should be in a separate patch.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 1
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7026f818_9ab539f4",
        "filename": "internal/ceres/test_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-11T21:53:36Z",
      "side": 1,
      "message": "I\u0027m not sure about this. All the problems fixed here are MSVC specific.",
      "parentUuid": "a1290358_50fcf066",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 1
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8881dae6_4808ac88",
        "filename": "internal/ceres/test_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-11T22:08:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7026f818_9ab539f4",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 1
      },
      "revId": "d86c8e8241d635f4c897a4155faecbf3e5aa747b",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}