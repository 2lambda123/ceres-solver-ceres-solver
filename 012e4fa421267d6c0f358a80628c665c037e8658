{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df16d936_589e51eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5435
      },
      "writtenOn": "2022-10-04T22:08:20Z",
      "side": 1,
      "message": "Hi,\n\nThis replaces the threadpool with Eigen. It would be nice if you could run some evaluations on your machines to get a larger test of performance on different machines. I\u0027ve noticed that the timings are fairly noisy.\n\nNote: the CL is complete except for I need to figure out what to do about openmp.\n\nthanks!\nMike",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51753024_cd2001fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-10-05T13:27:35Z",
      "side": 1,
      "message": "I just shared a spreadsheet with you guys, where I compared head CXX_THREADS, OPENMP and this CL on linux and macos. The results are curious.\n\nhttps://docs.google.com/spreadsheets/d/1UwIcPE0WGrNfK5axVWhqsryVszcoO2iMzvRrNK2--6M/edit?usp\u003dsharing\u0026resourcekey\u003d0-gfxgBAhmtoYdVlNIfpRqpg",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d6529de_27452f6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2022-10-05T18:30:30Z",
      "side": 1,
      "message": "As far as I understand, google benchmark reports cpu time spent by current thread  in \"CPU\" column, right?\n\nThus \"CPU\" timings show which approaches tend to perform work in the caller thread vs those which tend to only wait for work completion in that thread?",
      "parentUuid": "51753024_cd2001fc",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9082bdc8_d8477588",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-10-05T18:31:48Z",
      "side": 1,
      "message": "I did some what is likely dumb statistical analysis by just comparing how many times wall time/cpu time are better.\n\non linux. (\u003e means better)\n\nBy wall time OPENMP \u003e EIGEN ~ CXX_THREADS\nBy CPU time EIGEN \u003e OPENMP \u003e CXX_THREADS\n\non macos\nBy wall time CXX ~ EIGEN\nBy CPU time EIGEN \u003e CXX\n\nThe Eigen threadpool is leading to much smaller CPU times on both platforms. \nby wall time, there does not seem to be much difference between the two.\n\nThough perhaps BlockJacobi is over-represented in these benchmarks, it is not a particularly important workload either. If I exclude BlockJacobi benchmarks entirely.\n\nThen on linux\n\nBy wall time OPENMP \u003e EIGEN \u003e CXX_THREADS \nBy CPU time EIGEN \u003e OPENMP \u003e CXX_THREADS\n\non Macos\n\nBy wall time CXX \u003e EIGEN\nBy CPU time EIGEN \u003e CXX",
      "parentUuid": "51753024_cd2001fc",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fa46328_9be1ba0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-10-05T18:33:13Z",
      "side": 1,
      "message": "sorry had forgotten to send this, but yes I was wondering about the CPU numbers and what was causing that. So its good to know that this is just the time in the main thread. I suppose we can ignore the CPU time results then because it is not indicative of anything for the user.",
      "parentUuid": "9082bdc8_d8477588",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc982831_4815831d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5435
      },
      "writtenOn": "2022-10-05T20:39:47Z",
      "side": 1,
      "message": "I ran spmv_benchmark using benchy on borg for 10 iterations each and here are the results. I don\u0027t have openmp numbers since we don\u0027t support it.  If we take into account the variation then I think they are comparable.  (apparently gerrit doesn\u0027t respect formating, sorry about that.)\n\nname                                                                time/op\n                                                          head           eigen\nBM_BlockSparseRightMultiplyAndAccumulateBA/1           25.0ms ± 5%     25.6ms ±14%\nBM_BlockSparseRightMultiplyAndAccumulateBA/2           14.9ms ± 9%     15.8ms ± 3%\nBM_BlockSparseRightMultiplyAndAccumulateBA/4           8.50ms ± 5%     8.58ms ± 8%\nBM_BlockSparseRightMultiplyAndAccumulateBA/8           5.44ms ± 4%     4.69ms ± 9%\nBM_BlockSparseRightMultiplyAndAccumulateBA/16          4.18ms ± 4%     4.07ms ± 3%\nBM_BlockSparseRightMultiplyAndAccumulateUnstructured/1  22.2ms ±12%     22.1ms ± 2%\nBM_BlockSparseRightMultiplyAndAccumulateUnstructured/2  11.3ms ± 5%     11.6ms ± 4%\nBM_BlockSparseRightMultiplyAndAccumulateUnstructured/4  6.00ms ± 8%     6.05ms ± 6%\nBM_BlockSparseRightMultiplyAndAccumulateUnstructured/8  3.55ms ± 3%     3.13ms ± 4%\nBM_BlockSparseRightMultiplyAndAccumulateUnstructured/16 2.55ms ± 3%     2.59ms ± 3%\nBM_BlockSparseLeftMultiplyAndAccumulateBA               24.6ms ± 2%     24.5ms ± 6%\nBM_BlockSparseLeftMultiplyAndAccumulateUnstructured     30.8ms ± 4%     31.1ms ± 3%\nBM_CRSRightMultiplyAndAccumulateBA/1                    44.3ms ±15%     41.6ms ± 1%\nBM_CRSRightMultiplyAndAccumulateBA/2                    25.2ms ± 9%     27.2ms ± 3%\nBM_CRSRightMultiplyAndAccumulateBA/4                    14.0ms ± 3%     14.3ms ± 2%\nBM_CRSRightMultiplyAndAccumulateBA/8                    8.64ms ± 1%     7.36ms ± 5%\nBM_CRSRightMultiplyAndAccumulateBA/16                   6.71ms ± 5%     6.88ms ± 4%\nBM_CRSRightMultiplyAndAccumulateUnstructured/1          38.6ms ± 2%     38.3ms ± 2%\nBM_CRSRightMultiplyAndAccumulateUnstructured/2          20.7ms ±12%     20.3ms ± 5%\nBM_CRSRightMultiplyAndAccumulateUnstructured/4          10.8ms ± 8%     10.5ms ± 9%\nBM_CRSRightMultiplyAndAccumulateUnstructured/8          6.25ms ± 2%     5.24ms ± 1%\nBM_CRSRightMultiplyAndAccumulateUnstructured/16         4.30ms ± 1%     4.41ms ± 4%\nBM_CRSLeftMultiplyAndAccumulateBA                       29.8ms ± 3%     30.0ms ± 2%\nBM_CRSLeftMultiplyAndAccumulateUnstructured             28.3ms ± 2%     28.4ms ± 2%",
      "parentUuid": "3fa46328_9be1ba0c",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fde3824_62fcd659",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-10-05T21:01:08Z",
      "side": 1,
      "message": "Based on the experiments here I would like to propose that we keep our threadpool and remove the no threads and openmp options. The mild difference in performance between openmp and our threadpool is not really worth the extra complexity of multiple threading models.",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8262325_fc6d2f02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5435
      },
      "writtenOn": "2022-10-05T21:04:37Z",
      "side": 1,
      "message": "Makes sense to me.",
      "parentUuid": "6fde3824_62fcd659",
      "revId": "012e4fa421267d6c0f358a80628c665c037e8658",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}