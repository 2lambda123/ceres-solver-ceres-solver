{
  "comments": [
    {
      "key": {
        "uuid": "232560f7_32bbc1f3",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 813,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Remove this, see my comments in CeresConfig.cmake.in about how to do this.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d5853c6_76ab740f",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 813,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "232560f7_32bbc1f3",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdb10ca6_2af1411f",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 34,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Enclose paths in double-quotes to avoid issues on filesystems where paths may contain spaces, i.e: \"${CMAKE_CURRENT_LIST_DIR}\".",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e335cedb_1272a08e",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 34,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdb10ca6_2af1411f",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a299dc5_a12d054f",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 36,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I think the following is clearer:\n\nGenerates C-code implementation of Ceres\u0027 CostFunction::Evaluate() API from a templated C++ cost functor derived from ceres::CodegenCostFunction using autodiff.  The resulting implementation replaces the direct instantiation of autodiff in client code, typically resulting in improved performance.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5829cb4d_7d109b2e",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 36,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a299dc5_a12d054f",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f116fc03_eff94d32",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 43,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "1) Include that this is defaulted (and to what) in the docs here, so: OUTPUT_DIRECTORY [\"codegen\"].\n2) I think generated is a better relative prefix here than codegen to distinguish between the generator and the generated output as the former is already referred to as codegen.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce81ebc6_a90fc318",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 43,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f116fc03_eff94d32",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27704d15_80130853",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 44,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "The relative output directory",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c8a5644_de7a4ec4",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 44,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27704d15_80130853",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35047f95_6dd5d282",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "to the #include of the generated files, i.e: #include \"\u003cOUTPUT_DIRECTORY\u003e/\u003cGENERATED_FILE.h\u003e\"",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9311bb6e_44f98f00",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35047f95_6dd5d282",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b41da64a_33166766",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 46,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I think we\u0027re missing an extra argument for the (potentially nested) namespace of the functor, something like: FULL_NAMESPACE which might be \"a::b::c\".",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17cee237_e2f06957",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 46,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b41da64a_33166766",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6de9029_61567234",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Use lower case to fit with other CMake usage in example",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a4c826_61b2324a",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6de9029_61567234",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "954e83ba_5e927888",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 54,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I don\u0027t think this name is very clear about what this function does, something like:\n\nceres_generate_cost_function_implementation_for_functor()\n\nwould be clearer.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa4dd293_6765cdf8",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 54,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "954e83ba_5e927888",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db5d450e_f8cceb14",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Google Style - please update these lines to 80 cols max, typically after \u0027(\u0027 works well whilst retaining legibility.  This also applies elsewhere in this file.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a117ca_0c89df63",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db5d450e_f8cceb14",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff434248_649ac96e",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 64,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Indenting should be 2-spaces for Google Style, this looks like 4.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0eefb19_6029062b",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 64,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff434248_649ac96e",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18e00b00_94f39331",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 67,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "As above, wrap expansions of paths in double quotes to avoid issues on filesystems where they may have spaces",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b1ea16a_d73f92ca",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 67,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18e00b00_94f39331",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "153072bb_3851b217",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 74,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "\"${COST_FUNCTOR_INPUT_FILE}\"",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8661364_91a93cdf",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 74,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "153072bb_3851b217",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efed50a2_f3da3128",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 79,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "1. Line length (80 cols max for Google Style)\n2. application -\u003e user",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ff4f53f_193e46bd",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 79,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efed50a2_f3da3128",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2e6d007_f90d51aa",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 82,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I thought this casting was removed after my previous comments in favour of the native casing of the functor itself?\n\nThis also seems to still be inconsistent, as the GENERATOR_SOURCE uses ${COST_FUNCTOR_NAME}.  I think we should remove all use of the lower-case cast to avoid confusion.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b05d159_8eb133cf",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 82,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "I also prefer native casing, but I changed it back because of Sameer. For now I\u0027ll leave it like that but with lower case functor name for GENERATOR_SOURCE.",
      "parentUuid": "c2e6d007_f90d51aa",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5d98f2d_92caded5",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 87,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I don\u0027t see a corresponding file(MAKE_DIRECTORY ...) for the src directory in ${CALLER_CODEGEN_BUILD_DIR}",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2f1a1aa_d58d1cac",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 87,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5d98f2d_92caded5",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b92bc758_a4b13249",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 88,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I think GENERATED_EVALUATION_IMPL_FILE would be clearer here, this name doesn\u0027t convey what this is, and the functional name is also at odds with INCLUDE_FILE which is also an \u0027output\u0027 of this function",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef8f136_4b623bdb",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 88,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b92bc758_a4b13249",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9328ae92_8a9a9fbb",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 95,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Line length",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b795aa53_11ead51d",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 95,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9328ae92_8a9a9fbb",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70c01068_01195bcc",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 97,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "There is an additional complication here, what it a client #includes a file from their own project in the functor implementation?  As it stands I think this would fail to compile in that case as the generator does not include the client\u0027s include directory in its target_include_directories() list.\n\nThis would also be an issue for external templated dependencies, the most obvious example I can think of would be Sophus, although I don\u0027t know if that would pass through the code generation system regardless, but it is indicative of a pretty common use-case.\n\nAt the very least, I think we need some clear docs explaining exactly what the requirements for a functor in order that the code generation module will support it - Sameer, WDYT?",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b72b5ec_07d30ee2",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 97,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Good point. Even Eigen might be a problem because it is usually located in eigen3/Eigen. The easiest way would be to pass additional optional include directories (or targets) to this function. So for example:\n\n   ceres_generate_cost_function_implementation_for_functor(\n       NAME SquareFunctor\n       INPUT_FILE ${CMAKE_CURRENT_SOURCE_DIR}/square_functor.h\n       DEPENDENCIES Eigen3::Eigen Sophus::Sophus\n       )",
      "parentUuid": "70c01068_01195bcc",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f23ba422_68287b05",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 101,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Why pass \"${FULL_OUTPUT_FILE}\" here as an arg?  The generator does not use it.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c95308c_10db5750",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 101,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f23ba422_68287b05",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4f1fe5_3c115cd9",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 102,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "See below, I don\u0027t think you need to specify Ceres as a dependency here, it\u0027s already captured by the target_link_libraries() invocation for the generator target",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feba1bbc_49a8ef77",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 102,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c4f1fe5_3c115cd9",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e511ca7e_637fbe3b",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 106,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "You should use add_dependencies() to capture the dependency on other targets rather than passing them via the DEPENDS arg, as that is only for specifying dependencies upon output files of add_custom_comands(): https://cmake.org/cmake/help/v3.5/command/add_custom_target.html#command:add_custom_target\n\nHowever - I don\u0027t actually think you need to specify Ceres as a dependency here at all",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f8c41fa_83bec95b",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 106,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "True, executing a program also doesn\u0027t need dependencies.",
      "parentUuid": "e511ca7e_637fbe3b",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "010c2349_d347a4d6",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 108,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "application -\u003e client",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1de24f0_a9741e2d",
        "filename": "cmake/CeresCodeGeneration.cmake",
        "patchSetId": 21
      },
      "lineNbr": 108,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "010c2349_d347a4d6",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07ceffdd_d8985e7d",
        "filename": "cmake/CeresConfig.cmake.in",
        "patchSetId": 21
      },
      "lineNbr": 302,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "This isn\u0027t going to work for exported build directories.  Replace this with the following inserted after this block on lin 166 of CeresConfig.cmake.in:\n\n```\ninclude(CMakeFindDependencyMacro)\nfind_dependency(Threads)\n\n# Import code generation functions s/t they are available for use in client code\n# if find_package(Ceres) is successful.\ninclude(CeresCodeGeneration.cmake)\n```\n\nThis works because of the logic from lines 120-161 which appropriately updates CMAKE_MODULE_PATH to include the path to either the source or the installed Ceres CMake directory appropriately based on whether Ceres is exported or installed.  Although this path is later reset to that of the caller upon invocation of this function, any files included() *should* remain visible.",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4f3a837_aa2f2491",
        "filename": "cmake/CeresConfig.cmake.in",
        "patchSetId": 21
      },
      "lineNbr": 302,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07ceffdd_d8985e7d",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a85ef0c7_f72389e5",
        "filename": "cmake/codegen_include.h.in",
        "patchSetId": 21
      },
      "lineNbr": 4,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Please add a short comment in each case explaining what is happening in each, something like:\n\n#ifdef CERES_CODEGEN\n// Included by generator during generation of autodiff evaluation implementation,\n// by definition the generated implementation does not yet exist to be imported.\n#else\n// Included from client code, import generated implementation.\n#include \"@OUTPUT_DIRECTORY@/@COST_FUNCTOR_NAME@_evaluate_impl.h\"\n#endif",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe26d4db_024bfa5b",
        "filename": "cmake/codegen_include.h.in",
        "patchSetId": 21
      },
      "lineNbr": 4,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a85ef0c7_f72389e5",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5b815d3_952fc25f",
        "filename": "cmake/codegen_include.h.in",
        "patchSetId": 21
      },
      "lineNbr": 6,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I think we should remove all use of the lower-case cast of functor name to avoid confusion",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab52e247_d9ab84b9",
        "filename": "cmake/generate_code_for_functor.cc.in",
        "patchSetId": 21
      },
      "lineNbr": 16,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "What about namespaced functors?  Those will be typical in client code so we will need to be able to support them.  I think we need an additional parameter to the CMake generation function that allows them to specify what might be a chain of namespaces (i.e. a::b::c if the functors are nested).\n\nWith the additional argument FULL_NAMESPACE this would just become: @FULL_NAMESPACE@::@COST_FUNCTOR_NAME@",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90c52b73_03f50a21",
        "filename": "cmake/generate_code_for_functor.cc.in",
        "patchSetId": 21
      },
      "lineNbr": 16,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab52e247_d9ab84b9",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59f463e0_cc0a1c62",
        "filename": "cmake/generate_code_for_functor.cc.in",
        "patchSetId": 21
      },
      "lineNbr": 18,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "See previous comment about name of FULL_OUTPUT_FILE -\u003e GENERATED_EVALUATION_IMPL_FILE",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d849f9e2_e8d64c41",
        "filename": "cmake/generate_code_for_functor.cc.in",
        "patchSetId": 21
      },
      "lineNbr": 18,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59f463e0_cc0a1c62",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d2177ae_54fc2cae",
        "filename": "examples/CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 76,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Indenting - Google Style is two spaces throughout (CMake and C++)",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e9676b9_52fa2afd",
        "filename": "examples/CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 76,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d2177ae_54fc2cae",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44f6be96_15b096b5",
        "filename": "examples/helloworld_codegen.cc",
        "patchSetId": 21
      },
      "lineNbr": 52,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "Use named constants for clarity:\n\nconst double kTargetValue \u003d 10.0;\nCostFunction* cost_function \u003d new HelloWorldCostFunction(kTargetValue);",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0fc9b24_4405f0a4",
        "filename": "examples/helloworld_codegen.cc",
        "patchSetId": 21
      },
      "lineNbr": 52,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44f6be96_15b096b5",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfac592e_7a720b85",
        "filename": "include/ceres/codegen/cost_function.h",
        "patchSetId": 21
      },
      "lineNbr": 44,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "the CERES_CODEGEN -\u003e when CERES_CODEGEN",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97b725b2_f4771cb2",
        "filename": "include/ceres/codegen/cost_function.h",
        "patchSetId": 21
      },
      "lineNbr": 44,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfac592e_7a720b85",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0216e992_6264e051",
        "filename": "include/ceres/codegen/cost_function.h",
        "patchSetId": 21
      },
      "lineNbr": 47,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "when CERES_CODEGEN is not...",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42f2e5bc_2b38ebff",
        "filename": "include/ceres/codegen/cost_function.h",
        "patchSetId": 21
      },
      "lineNbr": 47,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0216e992_6264e051",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "003d1227_f6117330",
        "filename": "include/ceres/codegen/cost_function.h",
        "patchSetId": 21
      },
      "lineNbr": 77,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I think the following is clearer to avoid confusion in error output: Code generation for dynamic residuals is not yet supported",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6f0ca3e_ee3089b3",
        "filename": "include/ceres/codegen/cost_function.h",
        "patchSetId": 21
      },
      "lineNbr": 77,
      "author": {
        "id": 6265
      },
      "writtenOn": "2020-01-20T08:42:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "003d1227_f6117330",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81d5568c_adbe0cbf",
        "filename": "include/ceres/codegen/generate_code_for_functor.h",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 5155
      },
      "writtenOn": "2020-01-19T19:24:07Z",
      "side": 1,
      "message": "I\u0027m confused about the changes to this file, some of them appear to be unrelated to the addition of the CMake functions - if so can they please be separated into a separate CL",
      "revId": "5700b4384804d9a56dd2395d067b380fa848a77e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    }
  ]
}