{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e21f1f0_70158033",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Major change comes from splitting CRS conversion into stucture-related and value-related parts. This allows caching the structure which improves timings even more.\n\nDo you think it would be better to convert BlockSparseMatrix::CreateCompressedRowSparseMatrix into constructor of CompressedRowSparseMatrix?\n\nThis will simplify some code (those who need a pointer will use std::make_unique, those who don\u0027t - will just call a constructor; this will make diff smaller).\nBut this way it will be different from how other conversions are handled (for example, CompressedRowSparseMatrix::FromTripletSparseMatrix is a method returning unique_ptr and not a constructor).",
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d203b2c8_7575b400",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T20:42:48Z",
      "side": 1,
      "message": "The way I think about this is as follows.\nConverting the function into a constructor means that that now CompressedRowSparseMatrix has to know how to convert itself from BlockSparseMatrix. I thin of CompressedRowSparseMatrix as a simpler format that BlockSparseMatrix should know about rather than the other way around.\nI am not too worried about the callsites as a result.",
      "parentUuid": "2e21f1f0_70158033",
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ac3a248_86250d02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T20:42:48Z",
      "side": 1,
      "message": "Dmitriy,\nI will take a look at the code shortly. I think the structure you have right now looks okay to me.",
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36833841_b47b9148",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:03:19Z",
      "side": 1,
      "message": "almost there. \nwhat kind of perf improvements did you get from doing the split?",
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ab29c40_37a1f5df",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:03:19Z",
      "side": 1,
      "message": "don\u0027t need this either.",
      "range": {
        "startLine": 94,
        "startChar": 35,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "647fb755_ebbf519e",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:03:19Z",
      "side": 1,
      "message": "document function to say that this does not populate the values array. Infact it maybe worth changing the name of this function which is indicative of the fact that this function now only creates the sparsity structure.",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 63,
        "endChar": 41
      },
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35713398_fc1bce39",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:03:19Z",
      "side": 1,
      "message": "crs_values and crs_rows I think is more readable.",
      "range": {
        "startLine": 121,
        "startChar": 7,
        "endLine": 121,
        "endChar": 17
      },
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fb0acb6_ede11c65",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:32:23Z",
      "side": 1,
      "message": "can\u0027t this update be done cell wise? since all the rows for the row block size are identical. at least in the non-transposed case for sure. But even in that case, won\u0027t it be better to process one cell just once?",
      "range": {
        "startLine": 136,
        "startChar": 17,
        "endLine": 136,
        "endChar": 18
      },
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a0f44a0_0772741e",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:03:19Z",
      "side": 1,
      "message": "copy_n is better maybe?",
      "range": {
        "startLine": 150,
        "startChar": 15,
        "endLine": 150,
        "endChar": 19
      },
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1c83573_a51cc606",
        "filename": "internal/ceres/block_sparse_matrix.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T21:03:19Z",
      "side": 1,
      "message": "Document these methods.",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 5
      },
      "revId": "8553f3cf694cb7b33c326405a820f015e8009e70",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}