{
  "comments": [
    {
      "key": {
        "uuid": "05c83774_f61fc074",
        "filename": "examples/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5155
      },
      "writtenOn": "2014-04-24T08:59:40Z",
      "side": 1,
      "message": "I think the examples, if they need to, should use the same -D definition as Ceres itself: CERES_BUILDING_SHARED_LIBRARY.  That way we can have a single add_definitions() call in the root CMakeLists that does everything.  Unless there is some reason this doesn\u0027t work?",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_261c9800",
        "filename": "include/ceres/c_api.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "There can be no includes from public headers -\u003e internal headers; it can only go in one direction. The internal header are not shipped in binary packages.",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_053798fa",
        "filename": "include/ceres/c_api.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-24T17:48:01Z",
      "side": 1,
      "message": "To clarify: there are no source files (or headers) shipped with binary versions of Ceres from \"ceres/internal/\". This include adds a dependency from public headers (include/ceres) to internal, non-public, non-shipped, headers (internal/ceres).\n\nThis include must be removed.",
      "parentUuid": "a5104b96_261c9800",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_461b9406",
        "filename": "include/ceres/internal/platform_defines.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "2014 only",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_e609e0b9",
        "filename": "include/ceres/internal/platform_defines.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "I think a better place for this is port.h, which is already in the public headers.",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_661690e0",
        "filename": "include/ceres/internal/platform_defines.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "Trailing space",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_664df0f8",
        "filename": "include/ceres/internal/port.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "This should get inlined here.",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_4652749a",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "Trailing space",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_c65dc4a7",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "Trailingn space",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_8653cc9a",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-04-23T22:34:58Z",
      "side": 1,
      "message": "Don\u0027t we have a build-shared flag already? Why is another flag needed?",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45aeaf94_d822edbf",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 5155
      },
      "writtenOn": "2014-04-24T08:59:40Z",
      "side": 1,
      "message": "I don\u0027t think we should add this to the source files here, but rather use add_definitions() in the root CMakeLists as we do for other Ceres-specific defines (e.g. the C++11/TR1 ones).  This will mean that the #defines are passed to all targets, (including those in examples, and miniglog etc) but we already do this anyway.",
      "parentUuid": "a5104b96_8653cc9a",
      "revId": "7b6b8df81486b40c72afc13152bbab36bd5449c2",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}