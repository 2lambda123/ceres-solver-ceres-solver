{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "803bdff8_fae20c03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-05-04T18:34:18Z",
      "side": 1,
      "message": "My assumption that we can extract number of non-zeros per row in block-sparse matrix in O(1) time was incorrect, a full traversing of the row-block seems to be required because we do not fill number of non-zeros in non-transposed block-structure.\n\nThis method was only used in contexts where this was not important (apart from some parts of evaluation_benchmark).\n\nI have added test-case with non-sequential cell order.",
      "revId": "abbc4e7974e4e13b808091b2f99a403eff6a2fbd",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5af3747_fd4cdc97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-05-04T23:32:13Z",
      "side": 1,
      "message": "By the way, the same problem (not all possible cell layouts supported) happens with AppendRows / DeleteRowBlocks.\n\nIf one deletes row-block and then appends a new one - there might be cells that point to the same values.\n\nExample:\n\n1. Start with block-sparse matrix for Schur complement with E and F stored non-interleaved (example #2 from test)\n```\n[ 1 2   | 6 7   ]\n[ 3 4   | 8 9   ]\n[     5 |     10]\n```\n\nnum_nonzeros \u003d 10, max_num_nonzeros \u003d 10\n\n2. Delete one row-block\n```\n[ 1 2   | 6 7   ]\n[ 3 4   | 8 9   ]\n```\n\nnum_nonzeros \u003d 8, max_num_nonzeros \u003d 10, 9th element is outside the first num_nonzeros elements, and 5th element is not referenced by any cell. \n\n3. Append row-block `[    A |     B]`\nResult:\n```\n[ 1 2   | 6 7   ]\n[ 3 4   | 8 A   ]\n[     A |      B]\n```\n\nNow two cells point to the 9th element (and 5th element is not referenced by any cell.\n\n\nThis never happens in reality though, since we only delete as many rows as we appended before.",
      "revId": "abbc4e7974e4e13b808091b2f99a403eff6a2fbd",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "abbc4e7974e4e13b808091b2f99a403eff6a2fbd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "abbc4e7974e4e13b808091b2f99a403eff6a2fbd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "abbc4e7974e4e13b808091b2f99a403eff6a2fbd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}