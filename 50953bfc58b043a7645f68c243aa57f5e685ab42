{
  "comments": [
    {
      "key": {
        "uuid": "AAAH3X///dQ\u003d",
        "filename": "include/ceres/types.h",
        "patchSetId": 10
      },
      "lineNbr": 188,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "perhaps a more complete reference here would be nice. Either the papers or nocedal \u0026 wright.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///aA\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "whats your plan to test this code?",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH63///98\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 5015
      },
      "writtenOn": "2012-07-27T06:49:53Z",
      "side": 1,
      "message": "Apart from unit tests (for the 2D optimization on the trust-region), I\u0027d suggest adding an option to the bundle adjustment code that allows one to perturb the data. I think a valid test is then to look at how often the code (in say 100 random runs)\na) produces an optimum that is at least as good as the optimum returned by Dogleg or LM\nb) uses fewer steps than Dogleg or LM\nc) uses less time than Dogleg or LM\n\nIf it wins over Dogleg (which it should), I don\u0027t see a reason why it shouldn\u0027t be used (admittedly, both Dogleg and Dogleg-Subspace might be buggy in this case).\nHow did you test the other strategies?",
      "parentUuid": "AAAH3X///aA\u003d",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///dc\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 215,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Comment blank below. In general, we try to have equations indented by three spaces after the // and a blank above and below. For example:\n\n // Find the minimum of the two-dimensional problem\n //\n //   min. 1/2 x\u0027 B\u0027 H B x + g\u0027 B x\n //   s.t. || B x ||^2 \u003c\u003d r^2\n //\n // where r is the trust region radius and B is the matrix with  unit columns\n // spanning the subspace defined by the steepest descent and Newton direction.\n\nThroughout.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///dA\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 248,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Space after ,",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bs\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 248,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "eigentypes were created for template specialization inside the schur solver. here you can use eigen\u0027s vector and matrix types directly.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///ao\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 252,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Space after comma, though this should not use EigenTypes anyway.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///as\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 253,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Document where the 0.99 comes from. What is it? Why 0.99? Should it be a configurable knob?",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bo\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 254,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "what does this mean in practice?",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH63///+M\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 254,
      "author": {
        "id": 5015
      },
      "writtenOn": "2012-07-27T06:49:53Z",
      "side": 1,
      "message": "Basically this should never happen. If the subspace method correctly finds the (2d) optimum on the trust-region boundary, then the first order condition\n  \n   grad(f)(x) \u003d lambda grad(g)(x)\n\nshould hold. If it doesn\u0027t, something went wrong. It could be that this is just a fluke because the roots of the polynomial were badly estimated, it could be a real bug.",
      "parentUuid": "AAAH3X///bo\u003d",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bA\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 264,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "this function can return a 2 vector by value.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///c0\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 270,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Out of curiosity, why use EigenTypes? IIRC we have EigenTypes for some trickery we do in the specialized schur solver, but it\u0027s not obvious we need it here. Consider instead using\n\nEigen::Matrix\u003cdouble, 2, 2\u003e\n\nthroughout. Feel free to make a typedef at the top as well, with something like Matrix2d or Vector2d.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH63///+I\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 270,
      "author": {
        "id": 5015
      },
      "writtenOn": "2012-07-27T06:49:53Z",
      "side": 1,
      "message": "Because I didn\u0027t know and it looked like you wanted to abstract away things like alignment or memory layout by having your own typedefs (over sizes only).\nSounds like a good idea to me anyway!",
      "parentUuid": "AAAH3X///c0\u003d",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///ag\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 275,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "make a function out of the polynomial construction so that it can be tested.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///co\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 284,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "We don\u0027t generally use yoda conditions in Ceres. Consider writing this as simply\n\nif (FindPoly...)\n\nAlso, space after if.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///aw\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 284,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "what are the reasons for which this polynomial root finding may fail?",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///a0\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 290,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Spacing:\n\nfor (int i \u003d 0; i \u003c 4; ++i)",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///ak\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 291,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "make a function out of a single lambda evaluation so that it can be tested.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///cg\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 292,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Line length. Don\u0027t use EigenTypes.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bQ\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "I *think* you want fabs here.\n\nDocument what this is guarding against. Where does 1e-6 come from?",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///aM\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "yes define this as a constant and make give it a default value. we can decide on exposing it outside all the way up to solver::options later on.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH63///+E\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 5015
      },
      "writtenOn": "2012-07-27T06:49:53Z",
      "side": 1,
      "message": "What\u0027s your policy there? In C++, there are overloaded abs for float and double (and long double). Personally I prefer abs() (reads better), but there is a certain danger that you forget to include \u003ccmath\u003e, do include \u003ccstdlib\u003e (?) and ignore the compiler warning. In that case, abs(int) is used.",
      "parentUuid": "AAAH3X///bQ\u003d",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bc\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 410,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Is this difficult to handle? We try to take numerical stability pretty seriously in Ceres, so if this is not difficult to handle consider seeing if you can.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH63///+A\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 410,
      "author": {
        "id": 5015
      },
      "writtenOn": "2012-07-27T06:49:53Z",
      "side": 1,
      "message": "On second thought, a zero gradient will not occur (if it does, the solver should have terminated already.)\nThe problem occurs when the gradient points right along one of the axes of the quadratic model (i.e. if it is an eigenvector).\nI think it\u0027s safe to fall back to a one-dimensional \"search\" then.\n(x_min \u003d trust_region_radius * negative_gradient_/||negative_gradient_||",
      "parentUuid": "AAAH3X///bc\u003d",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///cQ\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 412,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "Isn\u0027t this better done by forming a dense nx2 matrix and calling QR factorization on it?",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bg\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 416,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "and you do get a rank 1 subspace, does your method naturally reduce to one dimensional search then? if not then we must do so.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bw\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 420,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "1. The TODO format is \n\n // TODO(alice): What to do here.\n\n2. This TODO() does not explain what someone should do. In this case, I\u0027d change this to:\n\n // TODO(markus): It appears gradient_ is in fact the negative gradient.\n // Rename gradient_ to negative_gradient_.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///cI\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 422,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "we should change the name of gradient here and elsewhere to negative_gradient_ to be clear.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bk\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 428,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Move this down a line to match with the use of tmp.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///bY\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 435,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Space after , here and next two lines.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///b4\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 435,
      "author": {
        "id": 5002
      },
      "writtenOn": "2012-07-26T21:56:02Z",
      "side": 1,
      "message": "single symmetric outer product will do if you store Jb as a 2xn row major matrix.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH63///94\u003d",
        "filename": "internal/ceres/dogleg_strategy.cc",
        "patchSetId": 10
      },
      "lineNbr": 435,
      "author": {
        "id": 5015
      },
      "writtenOn": "2012-07-27T06:49:53Z",
      "side": 1,
      "message": "Can I safely assume that matrices are and will be row major?",
      "parentUuid": "AAAH3X///b4\u003d",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH3X///ac\u003d",
        "filename": "internal/ceres/dogleg_strategy.h",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 5005
      },
      "writtenOn": "2012-07-26T21:53:04Z",
      "side": 1,
      "message": "Don\u0027t use EigenTypes.",
      "revId": "50953bfc58b043a7645f68c243aa57f5e685ab42",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}