{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "01c16340_bc2b1fe7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2021-11-27T23:04:32Z",
      "side": 1,
      "message": "PTA",
      "revId": "800e8b3269ed8a1bea1eb32dfd652fa23d430db1",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6716911_a417a763",
        "filename": "internal/ceres/jet_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 5002
      },
      "writtenOn": "2021-11-27T23:08:49Z",
      "side": 1,
      "message": "the native impl will not cause an overflow here.",
      "range": {
        "startLine": 980,
        "startChar": 30,
        "endLine": 980,
        "endChar": 44
      },
      "revId": "800e8b3269ed8a1bea1eb32dfd652fa23d430db1",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89564389_74f59b57",
        "filename": "internal/ceres/jet_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 6612
      },
      "writtenOn": "2021-11-27T23:39:08Z",
      "side": 1,
      "message": "Do you mean to use your test case?",
      "parentUuid": "b6716911_a417a763",
      "range": {
        "startLine": 980,
        "startChar": 30,
        "endLine": 980,
        "endChar": 44
      },
      "revId": "800e8b3269ed8a1bea1eb32dfd652fa23d430db1",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d795fd83_89c7134d",
        "filename": "internal/ceres/jet_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 5002
      },
      "writtenOn": "2021-11-27T23:44:58Z",
      "side": 1,
      "message": "sorry I meant to say that this test case is not particularly useful, since it is implementation dependent. It would test your earlier implementation, but a naive implementation will actually pass it. \n\nSo my suggestion is to construct jets that are not all of the same sign, and exercise the overflow logic regardless of the implementation details.",
      "parentUuid": "89564389_74f59b57",
      "range": {
        "startLine": 980,
        "startChar": 30,
        "endLine": 980,
        "endChar": 44
      },
      "revId": "800e8b3269ed8a1bea1eb32dfd652fa23d430db1",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4716c3f_815bd780",
        "filename": "internal/ceres/jet_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 6612
      },
      "writtenOn": "2021-11-27T23:52:02Z",
      "side": 1,
      "message": "I\u0027m still not completely sure I understand. PTAL.",
      "parentUuid": "d795fd83_89c7134d",
      "range": {
        "startLine": 980,
        "startChar": 30,
        "endLine": 980,
        "endChar": 44
      },
      "revId": "800e8b3269ed8a1bea1eb32dfd652fa23d430db1",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}