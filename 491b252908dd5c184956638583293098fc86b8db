{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e003fbb5_d7690594",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T01:05:57Z",
      "side": 1,
      "message": "Neat! The numbers look good. What LAPACK implementation are you using on the M1? ",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40ad3627_847fe643",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T18:17:13Z",
      "side": 1,
      "message": "I would be curious what the numbers look like with intel mkl and how they compare with your cuda stuff on the same machine.",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a79e082c_120d7625",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T20:42:26Z",
      "side": 1,
      "message": "On problem-744-543562-pre.txt with 20 iterations, on my Core i9-9920X running Ubuntu 20.04, with OpenBLAS:\n\neigen        164.533143\neigen+mixed  116.878866\nLAPACK        47.079672\nLAPACK+mixed  45.599979\nCUDA          45.470067\nCUDA+mixed    39.996551\n\nHowever, the Schur Elimination is actually taking up the bulk of the time in the LinearSolver::Solve times. Some quick instrumentation shows that in all of the above, about 37.538 is consistently the Schur eliminate times, which puts a lower bound on what you\u0027d expect to see for the total LinearSolver::Solve timings.",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5e29849_fb3007d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T21:38:39Z",
      "side": 1,
      "message": "And on the same computer, recompiled with IntelMKL:\nLAPACK        43.443452\nLAPACK+mixed  41.708270\n\nSchur Elimination contributions:\nLAPACK        37.103953\nLAPACK+mixed  37.256882",
      "parentUuid": "a79e082c_120d7625",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eed37cd3_93300973",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T22:57:31Z",
      "side": 1,
      "message": "I am surprised that the reduction from lapack to lapack mixed is basically nothing with openblas. this is surprising. sure the schur eliminator takes the bulk of the time but on my mac I see a substantial improvement. BTW I used multiple threads for the solved.",
      "parentUuid": "e5e29849_fb3007d4",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca992963_3f9f69e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T23:04:27Z",
      "side": 1,
      "message": "Let me ",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1febdc83_f353cbc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T23:04:27Z",
      "side": 1,
      "message": "Let me rerun the openblas test just to be sure.\nAll tests that I ran were with 24 threads. \nIntel MKL does an excellent job of taxing all cores FWIW.",
      "parentUuid": "eed37cd3_93300973",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb624841_7969423f",
        "filename": "internal/ceres/dense_cholesky.cc",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T01:05:57Z",
      "side": 1,
      "message": "Does Eigen distinguish numerical errors from API / other failures?",
      "range": {
        "startLine": 183,
        "startChar": 40,
        "endLine": 183,
        "endChar": 47
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16ce6454_fecddb58",
        "filename": "internal/ceres/dense_cholesky.cc",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T01:08:06Z",
      "side": 1,
      "message": "Looks like it does?\n\nhttps://eigen.tuxfamily.org/dox/group__enums.html#ga85fad7b87587764e5cf6b513a9e0ee5e",
      "parentUuid": "eb624841_7969423f",
      "range": {
        "startLine": 183,
        "startChar": 40,
        "endLine": 183,
        "endChar": 47
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62c14571_2628e403",
        "filename": "internal/ceres/dense_cholesky.cc",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T04:41:03Z",
      "side": 1,
      "message": "Interesting I had not realized this, and in all our code we just check for success. Instead of changing in this CL, I will come back and take a pass at at.\n\nhttps://github.com/ceres-solver/ceres-solver/issues/849",
      "parentUuid": "16ce6454_fecddb58",
      "range": {
        "startLine": 183,
        "startChar": 40,
        "endLine": 183,
        "endChar": 47
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8367fc6d_8d727d04",
        "filename": "internal/ceres/dense_cholesky.h",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T01:05:57Z",
      "side": 1,
      "message": "Since there is now a FloatEigenDenseCholesky, shouldn\u0027t this be DoubleEigenDenseCholesky for consistency?",
      "range": {
        "startLine": 103,
        "startChar": 22,
        "endLine": 103,
        "endChar": 40
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "613a434e_ed5baf6f",
        "filename": "internal/ceres/dense_cholesky.h",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T04:41:03Z",
      "side": 1,
      "message": "I am following the convention in the SparseCholesky code where by default everything is double precision and Float is the exception.",
      "parentUuid": "8367fc6d_8d727d04",
      "range": {
        "startLine": 103,
        "startChar": 22,
        "endLine": 103,
        "endChar": 40
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08c9c256_f5664c05",
        "filename": "internal/ceres/iterative_refiner.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T01:05:57Z",
      "side": 1,
      "message": "It is possible for the DenseCholesky Solve to fail. Shouldn\u0027t this check for success before updating the solution and trying to continue refinement?",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 76
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca8abdd_6ebde19b",
        "filename": "internal/ceres/iterative_refiner.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T04:41:03Z",
      "side": 1,
      "message": "the only real failure case is when the factorization has failed but the precondition for calling the refiner is that it be correct. Refine itself does not return an error code for this reason. Checking error here is not going to do us any good.",
      "parentUuid": "08c9c256_f5664c05",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 76
      },
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "813ca991_ea955997",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-08-04T01:05:57Z",
      "side": 1,
      "message": "It\u0027s good to add a note here that all dense Cholesky solvers currently support mixed precision, so that if and when someone adds another dense solver, they\u0027d think to check this logic.",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b399a6d_c9901788",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T04:41:03Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "813ca991_ea955997",
      "revId": "491b252908dd5c184956638583293098fc86b8db",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}