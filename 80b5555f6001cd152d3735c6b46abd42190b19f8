{
  "comments": [
    {
      "key": {
        "uuid": "233125ed_15761642",
        "filename": "include/ceres/internal/autodiff.h",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 5155
      },
      "writtenOn": "2017-01-16T16:45:31Z",
      "side": 1,
      "message": "This still makes me feel a bit ~ can we move the definition of kImpossibleValue to ceres/types.h perhaps?",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c0454e_3486853f",
        "filename": "include/ceres/internal/autodiff.h",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 5002
      },
      "writtenOn": "2017-01-16T16:53:30Z",
      "side": 1,
      "message": "won\u0027t that lead to ODR violations? one way around this would be to define it as a macro rather than as a const value..",
      "parentUuid": "233125ed_15761642",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_09324dc7",
        "filename": "include/ceres/internal/autodiff.h",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 5155
      },
      "writtenOn": "2017-01-16T17:06:04Z",
      "side": 1,
      "message": "I don\u0027t think it shouldn\u0027t result in any violations, as const objects have internal linkage by default unless you explicitly make then have external linkage via extern.  So const double kImpossibleValue \u003d 1e302; should be fine in a header.",
      "parentUuid": "23c0454e_3486853f",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "233125ed_55937e3f",
        "filename": "internal/ceres/autodiff_cost_function_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5155
      },
      "writtenOn": "2017-01-16T16:45:31Z",
      "side": 1,
      "message": "Line break?",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c0454e_7480fd1f",
        "filename": "internal/ceres/autodiff_cost_function_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5002
      },
      "writtenOn": "2017-01-16T16:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "233125ed_55937e3f",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6354fd0e_2c0b170f",
        "filename": "internal/ceres/numeric_diff_cost_function_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 5155
      },
      "writtenOn": "2017-01-16T16:45:31Z",
      "side": 1,
      "message": "Perhaps add a note here about why we are not checking the jacobians, just the residuals.",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c0454e_d496316b",
        "filename": "internal/ceres/numeric_diff_cost_function_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 5002
      },
      "writtenOn": "2017-01-16T16:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6354fd0e_2c0b170f",
      "revId": "80b5555f6001cd152d3735c6b46abd42190b19f8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}