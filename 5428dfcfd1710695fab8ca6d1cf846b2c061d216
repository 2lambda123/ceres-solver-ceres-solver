{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "af4cceef_f7aeac38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-14T12:37:51Z",
      "side": 1,
      "message": "Since we use imported targets now, `CeresConfig.cmake` needs to pull the dependencies using `find_dependency` even though these are link only dependencies in order to find the targets. I\u0027ll wait for your comments before I make the corresponding change.",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e263850_3d3bcf34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-16T19:53:35Z",
      "side": 1,
      "message": "Again good by me, but I am a cmake novice at best, Alex should approve and merge.",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a332c482_b6fbbc88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-17T22:18:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af4cceef_f7aeac38",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c69730_4127cbfb",
        "filename": "cmake/FindCXSparse.cmake",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-14T12:37:51Z",
      "side": 1,
      "message": "All these hints are actually unnecessary because CMake will automatically look in `/usr` and `/usr/local` prefixes under corresponding `include` and `lib(32|64)` directories. All other search locations seem to be very use case specific and can be easily set via `CMAKE_PREFIX_PATH` either the CMake or the environment variable. Also the special handling of Homebrew is all over the place which is generally not needed. Should this maybe be dropped?",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4b33325_8cf04173",
        "filename": "cmake/FindCXSparse.cmake",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-03-02T21:37:16Z",
      "side": 1,
      "message": "Any comments here?",
      "parentUuid": "35c69730_4127cbfb",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53d32bbd_6417564f",
        "filename": "cmake/FindSuiteSparse.cmake",
        "patchSetId": 2
      },
      "lineNbr": 358,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-15T20:27:03Z",
      "side": 1,
      "message": "`rt` is actually not a SuiteSparse component. Therefore, it is probably better to use `CheckLibraryExists` and supply `rt` as a target dependency to avoid hard-coding the full path to the `.so`/`.a`.",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a05d2354_385cae96",
        "filename": "cmake/FindSuiteSparse.cmake",
        "patchSetId": 2
      },
      "lineNbr": 358,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-17T16:18:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53d32bbd_6417564f",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "158a0c29_dbcdf876",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-14T15:29:24Z",
      "side": 1,
      "message": "This is no longer needed.",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8249405d_f965f2ac",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-17T16:18:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "158a0c29_dbcdf876",
      "revId": "5428dfcfd1710695fab8ca6d1cf846b2c061d216",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}