{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76c42b76_3b8549ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-05-01T15:46:06Z",
      "side": 1,
      "message": "Adds support of intel mkl as a sparse Cholesky solver.\n\nImplemented features:\n - Program-level reordering (this is the reason of using PARDISO API instead of either MKL-DSS API or Eigen\u0027s bindings to MKL)\n - Static/dynamic sparsity support\n\nPros:\n - Faster than Eigen, +- as fast as SuiteSparse\n - License is more forgiving than GPL license of SuiteSparse\n\nCons:\n - Vendor-specific API\n - QR decomposition has bad API in MKL, and not implemented in this CL\n\n\nBenchmark results (20 iterations of Schur-complement solver):\n\nhttps://drive.google.com/file/d/1y_sidb54apyEj_lnzLEstRpfKVJzulUG/view?usp\u003dsharing\n\n\n\n\nSparse QR decomposition API in MKL does not provide access to R factor directly, and only allows to solve right-hand problems. Decomposition of underconstrained matrices is also unsupported. Do you think it makes sense to implement covariance estimation for MKL via, let say, LDLT decomposition?",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ea836d5_29bf9b3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-01T15:51:36Z",
      "side": 1,
      "message": "Dmitriy, what kind of performance does this offer? do you have benchmark numbers?",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f08d08_fbe8dd2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-01T15:52:42Z",
      "side": 1,
      "message": "oh nm I see them. Let me take a look at the code and get back to you later today",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caa73a73_a1884a06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-05-06T20:13:58Z",
      "side": 1,
      "message": "Here is the same plot, but with Eigen included too (runs with Eigen were terminated at 1200s limit).\n\nhttps://drive.google.com/file/d/1yjOrPLAFgB-dYIyBRw0-RP69dnWg7k1W/view?usp\u003dsharing\n\nWhen looking at this plot, one should keep in mind that time axis is logarithmic.\n\nMy conclusion is that\n - MKL is comparably fast to SuiteSparse\n - Eigen is significantly slower than both\n - MKL might be useful for users who cannot use GPL\u0027d SuiteSparse (performance with only LGPL part of CHOLMOD is significantly worse)",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "519aa974_e574ce04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-06T20:16:36Z",
      "side": 1,
      "message": "Hi Dmitriy,\n\nSorry for the delay in reviewing. Last week was a bit crazy at work. I will have time to review carefully this coming week.\n\nSameer",
      "tag": "mailMessageId\u003d\u003cCABqdRUDKzJT1Lf5WoODkh5vwrMCsExKBW7V5dJLTghw8X7M2cA@mail.gmail.com\u003e",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "897f812c_e0e0ec1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "First Round. I think to reduce churn, it would be good to get mkl_sparse.h/cc done first before we integrate it into the rest of the code. I do not fully understand the API you are proposing here, it seems considerably more complicated than I expected it to be.",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8cfd472_f928ef3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:20:56Z",
      "side": 1,
      "message": "Dmitriy what is the problem with the sparseqr api in intel mkl? it would be good to understand that before we commit all the way to intel mkl.",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "620e09e1_73161a29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-05-09T19:37:24Z",
      "side": 1,
      "message": "SparseQR API seem to be not suitable to perform J^TJ inversion via qr decomposition of J \u003d QR\n\nThere are three problems:\n1). There is no support for solving transposed problems R^{T} x \u003d b [ https://www.intel.com/content/www/us/en/docs/onemkl/developer-reference-fortran/2023-1/mkl-sparse-qr-rsolve.html says:  NOTE:\nCurrently, the only supported value is SPARSE_OPERATION_NON_TRANSPOSE (non-transpose case)]\n2). There seem to be no method to obtain R factor to resolve the first problem outside of intel mkl\n3). There is no support for sparse (i.e. e_i) rhs when solving with triangular factor\n\nI think that 1) and 2) make Sparse QR in MKL basically unusable for our purposes, right?",
      "parentUuid": "f8cfd472_f928ef3c",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b15729c_b0502326",
        "filename": "include/ceres/types.h",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "I think this should be called MKL_SPARSE",
      "range": {
        "startLine": 182,
        "startChar": 5,
        "endLine": 182,
        "endChar": 6
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00f31523_242dfc90",
        "filename": "include/ceres/types.h",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b15729c_b0502326",
      "range": {
        "startLine": 182,
        "startChar": 5,
        "endLine": 182,
        "endChar": 6
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea6fa39_dc4cf46e",
        "filename": "include/ceres/types.h",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "Is it the case that if intel mkl is linked in, then when using LAPACK we will end up calling Intel MKL?",
      "range": {
        "startLine": 214,
        "startChar": 5,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ed0a439_e436bb55",
        "filename": "include/ceres/types.h",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Yes",
      "parentUuid": "0ea6fa39_dc4cf46e",
      "range": {
        "startLine": 214,
        "startChar": 5,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccdcf3b4_0cbbd5a7",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "add an event for measuring time for the ordering.",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54548719_3f780f76",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "MKL_SPARSE",
      "range": {
        "startLine": 190,
        "startChar": 45,
        "endLine": 190,
        "endChar": 49
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70cf23da_d40e558a",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54548719_3f780f76",
      "range": {
        "startLine": 190,
        "startChar": 45,
        "endLine": 190,
        "endChar": 49
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7071535d_1802d339",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "move this right after the else.",
      "range": {
        "startLine": 198,
        "startChar": 28,
        "endLine": 198,
        "endChar": 61
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c421607_28afe0e3",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7071535d_1802d339",
      "range": {
        "startLine": 198,
        "startChar": 28,
        "endLine": 198,
        "endChar": 61
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88a667c5_70038f1a",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "why do we need this define?",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "457ba9b6_b8df7987",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88a667c5_70038f1a",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dff69c8_4ab1efd0",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "Intel MKL.",
      "range": {
        "startLine": 49,
        "startChar": 45,
        "endLine": 49,
        "endChar": 50
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50dfc999_33928fe2",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8dff69c8_4ab1efd0",
      "range": {
        "startLine": 49,
        "startChar": 45,
        "endLine": 49,
        "endChar": 50
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3c073ea_f73ac4ea",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "Document this function also are we storing state in the MKLSparse object seems not right to me.",
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c6d1273_51ff24b3",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "this is easily fixed, if you define MKLSparseCholesky::StorageType to be upper triangular.",
      "range": {
        "startLine": 63,
        "startChar": 17,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07abe6dc_df1d0d1a",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "It is already set to upper triangular.\n\nThe problem is upper triangular is not \"strict\" in ceres-solver (in other words, \"upper triangular\" \u003d only upper part should be used), and \"strict\" in MKL (\"upper triangular\" \u003d matrix should not have any elements below diagonal).\n\nWith StorageType being set to upper triangular, ceres-solver will create a upper block-triangular matrix, not upper triangular.",
      "parentUuid": "2c6d1273_51ff24b3",
      "range": {
        "startLine": 63,
        "startChar": 17,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16cea9f8_5d07c912",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "why do we need three variants of this function all of which are public?",
      "range": {
        "startLine": 65,
        "startChar": 7,
        "endLine": 65,
        "endChar": 23
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41693963_a3d7c41c",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Moved one to private section",
      "parentUuid": "16cea9f8_5d07c912",
      "range": {
        "startLine": 65,
        "startChar": 7,
        "endLine": 65,
        "endChar": 23
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca6148d3_c611297c",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "why do we need two of these?",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 14
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27881a69_3326161e",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca6148d3_c611297c",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 14
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db443768_e93e6cbf",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "I do not understand the semantics of this function. what are the semantics of this function, why we are returning a sparse_matrix_t and an array too?",
      "range": {
        "startLine": 91,
        "startChar": 19,
        "endLine": 91,
        "endChar": 34
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2a54144_a0aff9bd",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "This method creates handle that reuses structure of the input, but adds a separate array of values.\n\nThis is utilized when computing structure of schur-complement (only matrix structure is used till the last moment, when there is no method to compute sparsity pattern of matrix subtraction).",
      "parentUuid": "db443768_e93e6cbf",
      "range": {
        "startLine": 91,
        "startChar": 19,
        "endLine": 91,
        "endChar": 34
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc2d119d_f748c594",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "why do we need a conversion back from a sparse_matrix_t to CSR?",
      "range": {
        "startLine": 94,
        "startChar": 35,
        "endLine": 94,
        "endChar": 48
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "279c6b1d_2f6ba805",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "document ownership, what do the users need to do with sparse_matrix_t?",
      "range": {
        "startLine": 96,
        "startChar": 16,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "606f2d0f_595f7424",
        "filename": "internal/ceres/mkl_sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "279c6b1d_2f6ba805",
      "range": {
        "startLine": 96,
        "startChar": 16,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f56db86_a2198102",
        "filename": "internal/ceres/sparse_cholesky.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "this should actually be possible right? mkl supports single precision?",
      "range": {
        "startLine": 53,
        "startChar": 38,
        "endLine": 53,
        "endChar": 39
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1394cfea_2f3d72e9",
        "filename": "internal/ceres/sparse_cholesky.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Yes, mkl supports single-precision for direct solvers",
      "parentUuid": "0f56db86_a2198102",
      "range": {
        "startLine": 53,
        "startChar": 38,
        "endLine": 53,
        "endChar": 39
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37f8bb6_94ad002d",
        "filename": "internal/ceres/sparse_normal_cholesky_solver_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-05-09T19:19:56Z",
      "side": 1,
      "message": "nesdis?",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 47
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2de0c6cf_2fa70d52",
        "filename": "internal/ceres/sparse_normal_cholesky_solver_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 6141
      },
      "writtenOn": "2024-05-15T11:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c37f8bb6_94ad002d",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 47
      },
      "revId": "614db06125d22b039bca76581617b93bf343c689",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}