{
  "comments": [
    {
      "key": {
        "uuid": "b976bcc3_53acc4be",
        "filename": "include/ceres/types.h",
        "patchSetId": 1
      },
      "lineNbr": 404,
      "author": {
        "id": 5002
      },
      "writtenOn": "2014-07-10T21:59:57Z",
      "side": 1,
      "message": "these enum names need to refactored, but that can probably wait till after this CL.\n\nSPARSE_QR is too generic now that we are using EIGEN_SPARSE_QR, and I wonder if we should break this up into two pieces, the algorithm and the library from which the algorithm is coming from, just like we do in the linear solver stuff.",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 17
      },
      "revId": "5b58b9a53753f1db49cda79fcfb424d9a2fd7b38",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b976bcc3_13a64cdd",
        "filename": "internal/ceres/covariance_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 877,
      "author": {
        "id": 5002
      },
      "writtenOn": "2014-07-10T21:59:57Z",
      "side": 1,
      "message": "why not just map the elements of jacobian using a Map object? there should be no need for a rather expensive expansion into triplets and then compression into a compressed column matrix again.\n\ndoes sparseqr require colmajor storage? where as the CRSMatrix is compressed row storage? \n\nEven if this is the case, aren\u0027t you better of by just mapping and then taking a transpose of the mapped matrix and assigning it?",
      "revId": "5b58b9a53753f1db49cda79fcfb424d9a2fd7b38",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c41f0544_c4c6fe26",
        "filename": "internal/ceres/eigen_sparse_matrix_utils.cc",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-07-08T22:27:29Z",
      "side": 1,
      "message": "2014",
      "revId": "5b58b9a53753f1db49cda79fcfb424d9a2fd7b38",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c41f0544_04ead684",
        "filename": "internal/ceres/eigen_sparse_matrix_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-07-08T22:27:29Z",
      "side": 1,
      "message": "2014",
      "revId": "5b58b9a53753f1db49cda79fcfb424d9a2fd7b38",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b976bcc3_f39cf091",
        "filename": "internal/ceres/eigen_sparse_matrix_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 5002
      },
      "writtenOn": "2014-07-10T21:59:57Z",
      "side": 1,
      "message": "can you not consolidate this with compresed_col_sparse_matrix_utils?",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 32
      },
      "revId": "5b58b9a53753f1db49cda79fcfb424d9a2fd7b38",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c41f0544_84f5e668",
        "filename": "internal/ceres/eigen_sparse_matrix_utils_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 5005
      },
      "writtenOn": "2014-07-08T22:27:29Z",
      "side": 1,
      "message": "2014",
      "revId": "5b58b9a53753f1db49cda79fcfb424d9a2fd7b38",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}