{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "641250fe_c19df1f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T04:51:44Z",
      "side": 1,
      "message": "Sergiu,\nWould you mind taking a look at this. The CMake interaction/interaction is a bit subtle and I would appreciate your careful eye.\nSameer",
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9829ffd1_314c6332",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T04:50:40Z",
      "side": 1,
      "message": "I am not sure you meant a bug id here, this is some AI generated garbage.",
      "range": {
        "startLine": 257,
        "startChar": 12,
        "endLine": 257,
        "endChar": 21
      },
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c7956b5_c5f76e69",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T18:40:54Z",
      "side": 1,
      "message": "So your original commentary was to highlight the possibility for improvement with no particular action to be taken in the scope of this PR? Should i just revert to original TODO wording?",
      "parentUuid": "9829ffd1_314c6332",
      "range": {
        "startLine": 257,
        "startChar": 12,
        "endLine": 257,
        "endChar": 21
      },
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10685001_409625b3",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T23:52:05Z",
      "side": 1,
      "message": "I may have garbled my comment. Yes, a simple todo here, with perhaps a github issue link is the best thing to do here.",
      "parentUuid": "6c7956b5_c5f76e69",
      "range": {
        "startLine": 257,
        "startChar": 12,
        "endLine": 257,
        "endChar": 21
      },
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "287722de_e83eb884",
        "filename": "internal/ceres/evaluator.cc",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:29:15Z",
      "side": 1,
      "message": "This change fixes a segfault at https://github.com/ceres-solver/ceres-solver/blob/522210a08dc9d098307416e204fa79a3a2fc3132/internal/ceres/detect_structure.cc#L54 (which could\u0027ve been caught if dynamic_cast with following check for nullptr would\u0027ve been used at https://github.com/ceres-solver/ceres-solver/blob/522210a08dc9d098307416e204fa79a3a2fc3132/internal/ceres/solver.cc#L783), but currently i don\u0027t really have a capacity to dig into the hierarchy/semantics to fully understand the problem and to be sure that this is indeed a proper fix.\n\nI hope that you can suggest if this is enough or i should investigate that more thoroughly.",
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0737820e_3f1e23b5",
        "filename": "internal/ceres/evaluator.cc",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T04:50:40Z",
      "side": 1,
      "message": "oh this is an interesting bug.  Let me see if I can figure it out.\nPreviously sparse_schur and iterative_schur both fall back to whatever CGNR was doing. except that cuda_sparse was never an option for sparse_schur it would get caught as an invalid configuration in solver.cc\n\nnow however sparse_schur + cuda_sparse is a thing, but in the case of cuda_sparse we do not want the compressed sparse row jacobian.\n\nso yes this is the right fix.",
      "parentUuid": "287722de_e83eb884",
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d9aa32c_aab74089",
        "filename": "internal/ceres/evaluator.cc",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T18:40:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0737820e_3f1e23b5",
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31aa3673_d9e46210",
        "filename": "internal/ceres/generate_bundle_adjustment_tests.py",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T04:50:40Z",
      "side": 1,
      "message": "this is not quite right, this will break when iterative_schur will have cuda_sparse support.\n\nI think the right thing here is to add a CERES_USE_CUDA guard first and then if the linear solver being used is either sparse_cholesky or sparse_normal_cholesky then add the ceres_use_cudss guard too.",
      "range": {
        "startLine": 224,
        "startChar": 49,
        "endLine": 224,
        "endChar": 64
      },
      "fixSuggestions": [
        {
          "fixId": "b8433a06_22fa57ab",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/generate_bundle_adjustment_tests.py",
              "range": {
                "startLine": 224,
                "startChar": 0,
                "endLine": 226,
                "endChar": 0
              },
              "replacement": "    preprocessor_conditions_begin.append(\u0027#ifdef CERES_USE_CUDA\u0027)\n    preprocessor_conditions_end.insert(0, \u0027#endif  // CERES_USE_CUDA\u0027)\n"
            }
          ]
        }
      ],
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d03cc6d1_b180c85f",
        "filename": "internal/ceres/generate_bundle_adjustment_tests.py",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T18:40:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31aa3673_d9e46210",
      "range": {
        "startLine": 224,
        "startChar": 49,
        "endLine": 224,
        "endChar": 64
      },
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b279d529_3906123b",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T04:50:40Z",
      "side": 1,
      "message": "this is a bit hard to read. I think a slightly more verbose but easier to read version is\n\nif (IsSparseLinearAlgebraLibraryTypeAvailable(..)) {\nif (options.sparse_linear_algebra_library_type \u003d\u003d CUDA_SPARSE) {\n#if !defined(CERES_USE_CUDSS) \n  return false;\n#else\n  return true;\n}\n  return true;\n} else {\n  *error \u003d StringPrintf(kNoLibraryFormat, solver_name, library_name);\n   return false;\n}",
      "range": {
        "startLine": 179,
        "startChar": 5,
        "endLine": 179,
        "endChar": 12
      },
      "fixSuggestions": [
        {
          "fixId": "0cdd27e8_8c72e9f6",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/solver.cc",
              "range": {
                "startLine": 177,
                "startChar": 0,
                "endLine": 183,
                "endChar": 0
              },
              "replacement": "  if (IsSparseLinearAlgebraLibraryTypeAvailable(\n          options.sparse_linear_algebra_library_type)) {\n"
            }
          ]
        }
      ],
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcbd969c_eeb841b2",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T18:40:54Z",
      "side": 1,
      "message": "This would require to repeat the error string formatting line, so it would actually look like this:\n```\n  if (IsSparseLinearAlgebraLibraryTypeAvailable(\n          options.sparse_linear_algebra_library_type)) {\n    if (options.sparse_linear_algebra_library_type \u003d\u003d CUDA_SPARSE) {\n#if !defined(CERES_USE_CUDSS)\n      *error \u003d StringPrintf(kNoLibraryFormat, solver_name, library_name);\n      return false;\n#endif\n    }\n  } else {\n    *error \u003d StringPrintf(kNoLibraryFormat, solver_name, library_name);\n    return false;\n  }\n```\n\nwhich does not look easier imo. Should we proceed with this option or should i left it unchanged?",
      "parentUuid": "b279d529_3906123b",
      "range": {
        "startLine": 179,
        "startChar": 5,
        "endLine": 179,
        "endChar": 12
      },
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d7935c_26345bdc",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-16T23:52:05Z",
      "side": 1,
      "message": "fair point it is more verbose but its more robust than putting a macro inside a conditional. so I would say proceed with this option for now.",
      "parentUuid": "fcbd969c_eeb841b2",
      "range": {
        "startLine": 179,
        "startChar": 5,
        "endLine": 179,
        "endChar": 12
      },
      "revId": "bbbf385ac2ba2c3c74fba8e946508cff4ace62a8",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}