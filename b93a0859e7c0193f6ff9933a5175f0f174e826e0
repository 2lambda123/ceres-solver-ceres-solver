{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "53f264cc_5307bba3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-12T16:15:15Z",
      "side": 1,
      "message": "Alex is going to take a look at this. Please hold tight.",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2231db4_defbbbe6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-12T16:32:09Z",
      "side": 1,
      "message": "Sure, no problem. Thanks!",
      "parentUuid": "53f264cc_5307bba3",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9170056_872da214",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5155
      },
      "writtenOn": "2022-02-13T13:52:06Z",
      "side": 1,
      "message": "Thanks for looking at this Sergiu.\n\nI am not a fan of this change.  Fundamentally, this is a (very old) legacy MSVC bug that breaks standard compliance, and even MSVC\u0027s own documentation for other modules (certainly their graphics APIs) advises both the use of std::min/max() and defining NOMINMAX which is also pretty common for other projects with similar issues (eg Catch2).  Adding custom macros around the uses of min/max as we are here looks like a real maintenance headache.  Ceres is standard compliant, and we require a standard compliant compiler.  The fact is that without defining NOMINMAX, the MSVC toolchain is not standard compliant, with it defined it is (at least in this regard).\n\nI am happy to add a target compile definition to the exported Ceres target that brings this is for users, or we can add a large note that it is required in the documentation, but not exported and they will have to manually define it themselves - although I think that\u0027s unhelpful given that it is necessary in order to use Ceres.\n\nI\u0027m not concerned about conflicts with non-compliant client code that relied on NOMINMAX when even the MSVC docs they should be using the compliant std::min/max().  If that was really not possible, then it should still be possible for them to firewall the parts of their project that used Ceres (and used Jet types) from the areas that relied on the legacy Windows.h macros.",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf1a7b40_2403c162",
        "filename": "internal/ceres/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-12T14:52:56Z",
      "side": 1,
      "message": "On an additional note, there are minor issues in glog when used in combination with gflags on MSVC. Since I co-maintain glog, I can fix the issues on short notice. Ideally, we would sync the final releases of Ceres solver 2.1 and glog 0.6.",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1c89ab7_c9e79f25",
        "filename": "internal/ceres/graph_algorithms.h",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-12T12:27:53Z",
      "side": 1,
      "message": "This is the only change that can be moved out of this CL since it triggers compilation errors under GCC too (also reported here: https://github.com/ceres-solver/ceres-solver/issues/758).",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba81e020_b2ca0237",
        "filename": "internal/ceres/graph_algorithms.h",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-02-12T16:16:37Z",
      "side": 1,
      "message": "I just sent out a bigger more comprehensive fix (perhaps overdoing it) but I suspect we need to do something like this for each standard header to make the code base robust to stuff being moved around.",
      "parentUuid": "c1c89ab7_c9e79f25",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3e001b8_dd4f7931",
        "filename": "internal/ceres/graph_algorithms.h",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-02-12T16:32:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba81e020_b2ca0237",
      "revId": "b93a0859e7c0193f6ff9933a5175f0f174e826e0",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}