{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "505d8cfe_9f47c038",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:37:31Z",
      "side": 1,
      "message": "that was a quick brief review, I was not sure if you were looking for a yes/no or a full review. I am happy to do a full review later though I suspect it is rather late in germany so we can continue this tomorrow also.",
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b6a962d_9811923e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-03-02T00:39:55Z",
      "side": 1,
      "message": "Yes, it\u0027s quite late. I prefer to update the patch once I have a full set of comments to avoid unnecessary work. Let\u0027s continue tomorrow.",
      "parentUuid": "505d8cfe_9f47c038",
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60206dd7_402d366f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:43:58Z",
      "side": 1,
      "message": "Okay then I will do a full review for you later today, so you can work with that tomorrow.\n\nThank you for your patience with the revision/comments.\n\nSameer",
      "tag": "mailMessageId\u003d\u003cCABqdRUABekco9199MZyze_aDF9xAQ9m7jtQcA5mpvBLB9gMRBg@mail.gmail.com\u003e",
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1370c2d_040086cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:59:57Z",
      "side": 1,
      "message": "only two real comments. The rest looks good to me.",
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7594f03_991c1b3c",
        "filename": "include/ceres/internal/product_manifold_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:59:57Z",
      "side": 1,
      "message": "Minor comment:\n\nWhy bother with calling exclusive_scan and dealing with its availability when you can just write \n\ntemplate \u003ctypename T, std::size_t N\u003e\ninline std::array\u003cT, N\u003e ComputeExclusiveScan(const std::array\u003cT, N\u003e\u0026 values) {\n  std::array\u003cT, N\u003e result;\n  result[0] \u003d 0;\n  for (int i \u003d 1; i \u003c N; ++i) {\n   result[i] \u003d result[i-1] + values[i-1];\n  }\n  return result;\n}",
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "274f6d46_cd3d8029",
        "filename": "include/ceres/internal/product_manifold_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:26:59Z",
      "side": 1,
      "message": "also PlusImpl (and related functions) can be made simpler by just passing one integer as a template argument which is the index of the current manifold and terminating the recursion when it is equal to kNumManifolds? ala the classic factorial computation or is that more complicated than using std::integer_sequence?",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 15
      },
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d88f310f_cf5b6b8f",
        "filename": "include/ceres/internal/product_manifold_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 6612
      },
      "writtenOn": "2022-03-02T00:36:58Z",
      "side": 1,
      "message": "I would leave that as is because it is a standard well-known pattern supported by the standard library. No need for custom logic.",
      "parentUuid": "274f6d46_cd3d8029",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 15
      },
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f79d3543_a0445beb",
        "filename": "include/ceres/internal/product_manifold_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:38:28Z",
      "side": 1,
      "message": "if its a standard pattern I am good with it.",
      "parentUuid": "d88f310f_cf5b6b8f",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 15
      },
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d5733a_6fd07a04",
        "filename": "include/ceres/internal/product_manifold_impl.h",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-03-02T00:59:57Z",
      "side": 1,
      "message": "replace get\u003cIndex0\u003e here and elsewhere with direct array access.",
      "range": {
        "startLine": 217,
        "startChar": 27,
        "endLine": 217,
        "endChar": 28
      },
      "revId": "e05e174a9e2248cdb310bdccd90cf2d0462cb4b9",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}