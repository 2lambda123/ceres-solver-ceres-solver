{
  "comments": [
    {
      "key": {
        "uuid": "075e6cfd_7b35dbda",
        "filename": "docs/source/solving.rst",
        "patchSetId": 12
      },
      "lineNbr": 402,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "I think this should be enforced in solver_impl.cc, that if the user selects BFGS or LBFGS, then the line search can only be WOLFE.",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87717c8e_d4f15c1e",
        "filename": "docs/source/solving.rst",
        "patchSetId": 12
      },
      "lineNbr": 402,
      "author": {
        "id": 5155
      },
      "writtenOn": "2013-07-16T15:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "075e6cfd_7b35dbda",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_bb905397",
        "filename": "docs/source/solving.rst",
        "patchSetId": 12
      },
      "lineNbr": 929,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "and return the best solution found uptil now?",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87717c8e_14fcb4f0",
        "filename": "docs/source/solving.rst",
        "patchSetId": 12
      },
      "lineNbr": 929,
      "author": {
        "id": 5155
      },
      "writtenOn": "2013-07-16T15:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "075e6cfd_bb905397",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_3b9d23a9",
        "filename": "docs/source/solving.rst",
        "patchSetId": 12
      },
      "lineNbr": 957,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "very nice job with the docs!",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_9bdd4f68",
        "filename": "examples/powell.cc",
        "patchSetId": 12
      },
      "lineNbr": 97,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "so now that this code is stabilizing, I am in two minds about having all of these flags in powell.cc. \n\npowell.cc is a basic tutorial example and I would prefer that the reader is not distracted from all the various flags defined here. Since nist.cc and bundle adjuster show how to use the line search minimizer in detail, I suggest we drop the line search changes in this file completely.\n\nWhat do you think?",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87717c8e_34861059",
        "filename": "examples/powell.cc",
        "patchSetId": 12
      },
      "lineNbr": 97,
      "author": {
        "id": 5155
      },
      "writtenOn": "2013-07-16T15:15:41Z",
      "side": 1,
      "message": "I have kept the minimizer selection option, but removed all the rest - so they get the defaults for either case - OK?",
      "parentUuid": "075e6cfd_9bdd4f68",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_bbcbf39a",
        "filename": "include/ceres/types.h",
        "patchSetId": 12
      },
      "lineNbr": 173,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "very nice.",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_9b1aaf2d",
        "filename": "internal/ceres/line_search_direction.cc",
        "patchSetId": 12
      },
      "lineNbr": 259,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "group this as delta_x * (delta_gradient.transpose() * inverse_hessian_) ..\nand that will ensure that the matrix vector product happens before the vector vector product.",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87717c8e_54838c47",
        "filename": "internal/ceres/line_search_direction.cc",
        "patchSetId": 12
      },
      "lineNbr": 259,
      "author": {
        "id": 5155
      },
      "writtenOn": "2013-07-16T15:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "075e6cfd_9b1aaf2d",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_5b09f7e4",
        "filename": "internal/ceres/line_search_direction.cc",
        "patchSetId": 12
      },
      "lineNbr": 262,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "by just saying \n\nMatrix A_plus_A_transpose(num_parameters_, num_parameters_);\n\nand it doesn\u0027t really matter whats in the upper triangular part anyways since you are not going to touch it.",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87717c8e_7480883a",
        "filename": "internal/ceres/line_search_direction.cc",
        "patchSetId": 12
      },
      "lineNbr": 262,
      "author": {
        "id": 5155
      },
      "writtenOn": "2013-07-16T15:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "075e6cfd_5b09f7e4",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075e6cfd_9bc38f5d",
        "filename": "internal/ceres/line_search_direction.cc",
        "patchSetId": 12
      },
      "lineNbr": 279,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-07-15T20:34:44Z",
      "side": 1,
      "message": "rho_k * (B - A_plus_A_transpose) ?\n\nalso since this is the only place you need A_plus_A_transpose, why compute it explicitly? why not write this out as\n\nrho_k * (B - A - A.transpose());\n\nand eigen will vectorize the whole expression I believe.",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87717c8e_94dd2468",
        "filename": "internal/ceres/line_search_direction.cc",
        "patchSetId": 12
      },
      "lineNbr": 279,
      "author": {
        "id": 5155
      },
      "writtenOn": "2013-07-16T15:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "075e6cfd_9bc38f5d",
      "revId": "dfce9fb597c077b74ef6816621a257ebab5e528f",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}