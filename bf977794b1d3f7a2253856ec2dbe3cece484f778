{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eee6eb20_843c0beb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-22T17:09:49Z",
      "side": 1,
      "message": "Thank you Mark, do you have any performance numbers to share? ",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67979cff_a3f1e341",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-22T17:15:27Z",
      "side": 1,
      "message": "as a high level API comment, I do not think about power series expansion as a linear solver on its own (it can be used so of course). I think it would better to have it as a preconditioner for iterative schur.\n",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d7a2daa_b8b97a62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-22T18:35:38Z",
      "side": 1,
      "message": "Nikolaus, I am curious what you think of this implementation and how it compares to yours in terms of optimizations/performance.",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28b3456c_9c5fe5ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-07-24T10:45:19Z",
      "side": 1,
      "message": "I will look into that.",
      "parentUuid": "67979cff_a3f1e341",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89247946_4e4df263",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-07-24T10:45:19Z",
      "side": 1,
      "message": "(First time using gerrit, so, huh, reply actually is not the \"REPLY\")\n\nSure. Using ryzen 3700x.\n\n./bundle_adjuster -input bal/problem-1031-110968-pre.txt -num_iterations 50 -num_threads 8 -linear_solver iterative_schur -max_linear_solve_iterations 50 -preconditioner jacobi -eta 0.01\niter      cost      cost_change  |gradient|   |step|    tr_ratio  tr_radius  ls_iter  iter_time  total_time\n   0  1.820229e+07    0.00e+00    1.20e+12   0.00e+00   0.00e+00  1.00e+04        0    1.20e-01    7.54e-01\n   1  1.630303e+06    1.66e+07    2.87e+10   1.31e+03   9.25e-01  2.58e+04       14    5.05e-01    1.26e+00\n   2  1.538688e+07   -1.38e+07    2.87e+10   3.50e+03  -1.02e+01  1.29e+04       50    1.01e+00    2.27e+00\n   3  3.683584e+06   -2.05e+06    2.87e+10   1.91e+03  -1.52e+00  3.23e+03       49    9.62e-01    3.23e+00\n   4  5.711009e+05    1.06e+06    2.66e+08   5.66e+02   7.82e-01  3.93e+03       42    9.55e-01    4.19e+00\n   5  2.107797e+06   -1.54e+06    2.66e+08   6.50e+02  -5.20e+00  1.97e+03       50    1.01e+00    5.19e+00\n   6  3.308809e+06   -2.74e+06    2.66e+08   3.46e+02  -9.28e+00  4.92e+02       39    8.00e-01    5.99e+00\n   7  1.266726e+06   -6.96e+05    2.66e+08   1.15e+02  -2.36e+00  6.14e+01       20    4.91e-01    6.48e+00\n   8  2.976484e+05    2.73e+05    3.42e+07   4.49e+01   9.33e-01  1.76e+02       10    4.26e-01    6.91e+00\n   9  2.772175e+05    2.04e+04    8.34e+06   3.97e+01   9.89e-01  5.28e+02       12    4.64e-01    7.37e+00\n  10  2.765825e+05    6.35e+02    1.01e+07   9.74e+01   9.64e-01  1.58e+03       26    6.95e-01    8.07e+00\n  11  2.761234e+05    4.59e+02    2.83e+07   2.71e+02   1.01e+00  4.75e+03       42    9.60e-01    9.03e+00\n  12  2.755626e+05    5.61e+02    5.00e+07   7.70e+02   9.57e-01  1.43e+04       50    1.10e+00    1.01e+01\n  13  2.753537e+05    2.09e+02    2.28e+07   2.20e+03   8.08e-01  1.86e+04       50    1.10e+00    1.12e+01\n  14  2.752824e+05    7.13e+01    2.36e+07   2.83e+03   5.85e-01  1.87e+04       50    1.10e+00    1.23e+01\n  15  2.751978e+05    8.46e+01    1.49e+07   2.84e+03   9.41e-01  5.61e+04       50    1.10e+00    1.34e+01\n  16  2.751814e+05    1.64e+01    7.58e+07   8.26e+03   7.47e-01  6.37e+04       50    1.09e+00    1.45e+01\n  17  3.431896e+05   -6.80e+04    7.58e+07   9.37e+03  -4.88e+03  3.19e+04       50    1.01e+00    1.55e+01\n  18  3.232357e+05   -4.81e+04    7.58e+07   4.73e+03  -4.42e+03  7.97e+03       50    9.95e-01    1.65e+01\n  19  2.808644e+05   -5.68e+03    7.58e+07   1.19e+03  -8.09e+02  9.96e+02       50    9.94e-01    1.75e+01\n  20  2.752011e+05   -1.97e+01    7.58e+07   1.50e+02  -4.12e+00  6.22e+01       50    9.99e-01    1.85e+01\n  21  2.751774e+05    4.00e+00    3.85e+06   9.72e+00   9.89e-01  1.87e+02       12    4.58e-01    1.90e+01\n  22  2.751772e+05    2.66e-01    9.38e+05   2.83e+01   1.00e+00  5.60e+02       27    7.17e-01    1.97e+01\n  23  2.751771e+05    1.72e-02    3.22e+06   8.45e+01   4.09e-02  3.16e+02       44    1.01e+00    2.07e+01\n  24  2.751765e+05    6.02e-01    1.22e+06   4.76e+01   9.97e-01  9.47e+02       33    8.22e-01    2.15e+01\n  25  2.751760e+05    5.45e-01    2.19e+06   1.43e+02   1.06e+00  2.84e+03       50    1.10e+00    2.26e+01\n  26  2.751746e+05    1.42e+00    4.05e+06   4.28e+02   1.10e+00  8.52e+03       50    1.10e+00    2.37e+01\n  27  2.751899e+05   -1.53e+01    4.05e+06   1.28e+03  -3.65e+00  4.26e+03       50    1.01e+00    2.47e+01\n  28  2.751783e+05   -3.69e+00    4.05e+06   6.42e+02  -1.24e+00  1.07e+03       50    9.94e-01    2.57e+01\n  29  2.751733e+05    1.28e+00    5.72e+05   1.61e+02   9.45e-01  3.20e+03       48    1.04e+00    2.67e+01\n  30  2.751712e+05    2.10e+00    3.46e+06   4.81e+02   7.52e-01  3.66e+03       50    1.10e+00    2.78e+01\n  31  2.751692e+05    1.97e+00    2.47e+06   5.51e+02   9.91e-01  1.10e+04       50    1.10e+00    2.89e+01\n  32  2.751670e+05    2.28e+00    3.33e+06   1.65e+03   9.64e-01  3.30e+04       50    1.10e+00    3.00e+01\n  33  2.751636e+05    3.35e+00    2.25e+07   4.90e+03   7.91e-01  4.11e+04       50    1.10e+00    3.11e+01\n  34  2.751598e+05    3.85e+00    4.00e+07   6.07e+03   8.59e-01  6.51e+04       50    1.10e+00    3.22e+01\n  35  2.751565e+05    3.24e+00    2.47e+07   9.56e+03   9.39e-01  1.95e+05       50    1.10e+00    3.33e+01\n  36  2.751531e+05    3.40e+00    4.70e+07   2.83e+04   8.00e-01  2.49e+05       50    1.10e+00    3.44e+01\n  37  2.751809e+05   -2.78e+01    4.70e+07   3.59e+04  -8.10e+00  1.24e+05       50    1.00e+00    3.54e+01\n  38  2.751715e+05   -1.84e+01    4.70e+07   1.80e+04  -6.74e+00  3.11e+04       50    9.94e-01    3.64e+01\n  39  2.751550e+05   -1.92e+00    4.70e+07   4.53e+03  -1.18e+00  3.89e+03       50    9.93e-01    3.74e+01\n  40  2.751527e+05    4.53e-01    1.05e+07   5.67e+02   8.87e-01  7.27e+03       50    1.09e+00    3.85e+01\n  41  2.751522e+05    4.40e-01    2.89e+06   1.06e+03   1.00e+00  2.18e+04       50    1.09e+00    3.96e+01\n  42  2.751514e+05    8.10e-01    6.64e+06   3.18e+03   9.84e-01  6.54e+04       50    1.10e+00    4.07e+01\n  43  2.751503e+05    1.15e+00    2.49e+07   9.51e+03   9.36e-01  1.94e+05       50    1.10e+00    4.18e+01\n  44  2.751520e+05   -1.73e+00    2.49e+07   2.80e+04  -1.10e+00  9.69e+04       50    1.00e+00    4.28e+01\n  45  2.751514e+05   -1.11e+00    2.49e+07   1.40e+04  -1.02e+00  2.42e+04       50    9.95e-01    4.38e+01\n  46  2.751501e+05    1.94e-01    1.22e+07   3.52e+03   3.23e-01  2.32e+04       50    1.09e+00    4.49e+01\n  47  2.751495e+05    5.38e-01    1.32e+07   3.37e+03   6.47e-01  2.38e+04       50    1.10e+00    4.60e+01\n  48  2.751497e+05   -2.12e-01    1.32e+07   3.45e+03  -3.27e-01  1.19e+04       50    1.01e+00    4.70e+01\n  49  2.751493e+05    2.45e-01    6.26e+06   1.73e+03   4.91e-01  1.19e+04       50    1.08e+00    4.81e+01\n  50  2.751489e+05    3.83e-01    5.20e+06   1.73e+03   7.94e-01  1.49e+04       50    1.10e+00    4.92e+01\n\nSolver Summary (v 2.2.0-eigen-(3.4.0)-lapack-suitesparse-(5.12.0)-metis-(5.1.0)-eigensparse-no_openmp-cuda-(11070))\n\n                                     Original                  Reduced\nParameter blocks                       111999                   111999\nParameters                             342183                   342183\nResidual blocks                        500265                   500265\nResiduals                             1000530                  1000530\n\nMinimizer                        TRUST_REGION\nTrust region strategy     LEVENBERG_MARQUARDT\n                                        Given                     Used\nLinear solver                 ITERATIVE_SCHUR          ITERATIVE_SCHUR\nPreconditioner                         JACOBI                   JACOBI\nThreads                                     8                        8\nLinear solver ordering              AUTOMATIC              110968,1031\nSchur structure                         2,3,9                    2,3,9\n\nCost:\nInitial                          1.820229e+07\nFinal                            2.751489e+05\nChange                           1.792714e+07\n\nMinimizer iterations                       51\nSuccessful steps                           34\nUnsuccessful steps                         17\n\nTime (in seconds):\nPreprocessor                         0.634504\n\n  Residual only evaluation           0.935806 (50)\n  Jacobian \u0026 residual evaluation     2.655473 (34)\n  Linear solver                     43.267050 (50)\nMinimizer                           48.545428\n\nPostprocessor                        0.021944\nTotal                               49.201876\n\nTermination:                   NO_CONVERGENCE (Maximum number of iterations reached. Number of iterations: 50.)\n\n\n./bundle_adjuster -input bal/problem-1031-110968-pre.txt -num_iterations 50 -num_threads 8 -linear_solver iterative_schur_power -max_linear_solve_iterations 50 -preconditioner identity -eta 0.01\niter      cost      cost_change  |gradient|   |step|    tr_ratio  tr_radius  ls_iter  iter_time  total_time\n   0  1.820229e+07    0.00e+00    1.20e+12   0.00e+00   0.00e+00  1.00e+04        0    1.20e-01    7.51e-01\n   1  1.794283e+06    1.64e+07    3.05e+10   1.95e+03   9.16e-01  2.36e+04       35    8.27e-01    1.58e+00\n   2  6.945978e+05    1.10e+06    2.00e+11   3.12e+03   7.27e-01  2.61e+04       50    1.06e+00    2.64e+00\n   3  4.352625e+05    2.59e+05    4.20e+10   3.71e+03   6.24e-01  2.65e+04       50    1.06e+00    3.70e+00\n   4  1.961271e+08   -1.96e+08    4.20e+10   3.88e+03  -1.24e+03  1.32e+04       50    9.61e-01    4.66e+00\n   5  8.873536e+05   -4.52e+05    4.20e+10   1.98e+03  -2.87e+00  3.31e+03       50    9.48e-01    5.61e+00\n   6  3.034002e+05    1.32e+05    8.71e+09   5.27e+02   8.38e-01  4.80e+03       50    1.04e+00    6.64e+00\n   7  2.854655e+05    1.79e+04    8.43e+08   7.63e+02   6.85e-01  5.05e+03       50    1.05e+00    7.69e+00\n   8  2.774538e+05    8.01e+03    8.75e+06   7.85e+02   9.29e-01  1.37e+04       50    1.04e+00    8.73e+00\n   9  7.548864e+05   -4.77e+05    8.75e+06   2.09e+03  -4.62e+02  6.83e+03       50    9.59e-01    9.69e+00\n  10  3.482099e+10   -3.48e+10    8.75e+06   1.06e+03  -3.49e+07  1.71e+03       50    9.40e-01    1.06e+01\n  11  2.773303e+05    1.23e+02    6.86e+06   2.73e+02   1.36e-01  1.23e+03       50    1.03e+00    1.17e+01\n  12  2.764127e+05    9.18e+02    5.21e+06   1.95e+02   9.72e-01  3.70e+03       50    1.05e+00    1.27e+01\n  13  2.762377e+05    1.75e+02    4.35e+06   5.75e+02   1.00e+00  1.11e+04       50    1.04e+00    1.38e+01\n  14  2.761051e+05    1.33e+02    2.22e+06   1.70e+03   9.91e-01  3.33e+04       50    1.04e+00    1.48e+01\n  15  2.760007e+05    1.04e+02    3.57e+06   5.00e+03   9.92e-01  9.99e+04       50    1.04e+00    1.58e+01\n  16  2.759221e+05    7.86e+01    2.91e+06   1.46e+04   9.75e-01  3.00e+05       50    1.05e+00    1.69e+01\n  17  2.758621e+05    6.00e+01    2.54e+06   4.27e+04   9.57e-01  8.99e+05       50    1.05e+00    1.79e+01\n  18  2.758155e+05    4.67e+01    2.38e+06   1.28e+05   9.52e-01  2.70e+06       50    1.05e+00    1.90e+01\n  19  2.757774e+05    3.81e+01    2.08e+06   3.84e+05   9.67e-01  8.09e+06       50    1.05e+00    2.00e+01\n  20  2.757460e+05    3.13e+01    1.78e+06   1.16e+06   9.64e-01  2.43e+07       50    1.05e+00    2.11e+01\n  21  2.757162e+05    2.98e+01    1.76e+06   1.03e+06   9.90e-01  7.28e+07       50    1.05e+00    2.21e+01\n  22  2.756901e+05    2.61e+01    1.43e+06   1.62e+06   9.90e-01  2.18e+08       50    1.04e+00    2.32e+01\n  23  2.756795e+05    1.05e+01    6.05e+06   1.73e+06   9.94e-01  6.55e+08       23    6.14e-01    2.38e+01\n  24  2.756682e+05    1.13e+01    2.79e+06   2.58e+06   9.78e-01  1.97e+09       28    6.91e-01    2.45e+01\n  25  2.756588e+05    9.39e+00    7.20e+06   3.74e+06   9.89e-01  5.90e+09       24    6.29e-01    2.51e+01\n  26  2.756460e+05    1.28e+01    9.56e+06   5.40e+06   9.89e-01  1.77e+10       37    8.53e-01    2.60e+01\n  27  2.756303e+05    1.57e+01    4.77e+06   7.79e+06   9.94e-01  5.31e+10       50    1.05e+00    2.70e+01\n  28  2.756171e+05    1.32e+01    4.13e+06   1.12e+07   9.37e-01  1.59e+11       50    1.04e+00    2.80e+01\n  29  2.756160e+05    1.13e+00    4.68e+07   1.62e+07   8.10e-01  2.09e+11        1    2.55e-01    2.83e+01\n  30  2.757251e+05   -1.09e+02    4.68e+07   1.02e+07  -1.29e+02  1.05e+11        1    1.67e-01    2.85e+01\n  31  2.757251e+05   -1.09e+02    4.68e+07   5.12e+06  -1.29e+02  2.62e+10        1    1.56e-01    2.86e+01\n  32  2.840982e+05   -8.48e+03    4.68e+07   1.28e+06  -6.52e+02  3.27e+09       50    9.46e-01    2.96e+01\n  33  2.840982e+05   -8.48e+03    4.68e+07   1.60e+05  -6.52e+02  2.04e+08       50    9.42e-01    3.05e+01\n  34  2.840978e+05   -8.48e+03    4.68e+07   1.00e+04  -6.53e+02  6.39e+06       50    9.41e-01    3.14e+01\n  35  2.840831e+05   -8.47e+03    4.68e+07   1.34e+03  -6.53e+02  9.98e+04       50    9.41e-01    3.24e+01\n  36  2.831943e+05   -7.58e+03    4.68e+07   1.13e+03  -5.90e+02  7.80e+02       50    9.43e-01    3.33e+01\n  37  2.756331e+05   -1.71e+01    4.68e+07   1.61e+02  -1.70e+00  3.05e+00       50    9.43e-01    3.43e+01\n\nSolver Summary (v 2.2.0-eigen-(3.4.0)-lapack-suitesparse-(5.12.0)-metis-(5.1.0)-eigensparse-no_openmp-cuda-(11070))\n\n                                     Original                  Reduced\nParameter blocks                       111999                   111999\nParameters                             342183                   342183\nResidual blocks                        500265                   500265\nResiduals                             1000530                  1000530\n\nMinimizer                        TRUST_REGION\nTrust region strategy     LEVENBERG_MARQUARDT\n                                        Given                     Used\nLinear solver           ITERATIVE_SCHUR_POWER    ITERATIVE_SCHUR_POWER\nThreads                                     8                        8\nLinear solver ordering              AUTOMATIC              110968,1031\nSchur structure                         2,3,9                    2,3,9\n\nCost:\nInitial                          1.820229e+07\nFinal                            2.756160e+05\nChange                           1.792668e+07\n\nMinimizer iterations                       38\nSuccessful steps                           26\nUnsuccessful steps                         12\n\nTime (in seconds):\nPreprocessor                         0.630380\n\n  Residual only evaluation           0.696843 (38)\n  Jacobian \u0026 residual evaluation     1.989065 (26)\n  Linear solver                     30.062607 (38)\nMinimizer                           34.064812\n\nPostprocessor                        0.025164\nTotal                               34.720357\n\nTermination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 6.781710e-09 \u003c\u003d 1.000000e-08.)",
      "parentUuid": "eee6eb20_843c0beb",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66fca258_af02f40f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6190
      },
      "writtenOn": "2022-07-24T12:12:45Z",
      "side": 1,
      "message": "I\u0027m travelling at the moment but I will have a look as soon as I can once I\u0027m back.",
      "parentUuid": "2d7a2daa_b8b97a62",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "991fc0b6_fa3cfe08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-24T17:09:17Z",
      "side": 1,
      "message": "these numbers do not look bad, how do they compare to what is reported in the paper?",
      "parentUuid": "89247946_4e4df263",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99b94bbd_6fbe9aa1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-07-24T20:46:13Z",
      "side": 1,
      "message": "Did tinkered a bit with that idea, currently don\u0027t see any immediate speedups on Ladybug-1031 in terms of net wall time. Do i understand correctly, that the idea is to use a few terms of power series expansion of S^-1 as a preconditioner on every step of cg?",
      "parentUuid": "28b3456c_9c5fe5ed",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9afd2b82_a095bb47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-07-24T20:46:13Z",
      "side": 1,
      "message": "While there are no direct comparisons with ceres in the paper (Simon Weber suggested to look here https://vision.in.tum.de/_media/members/demmeln/chan2022ma.pdf for such comparison, but i do not found direct comparison of \"ceres-implicit\" with \"power-64\"), the performance on Ladybug-1031 seems to be on par with \"PoBA\" line at Fig. 5(b). My comment \"no speedups found\" was about the inferior performance on Ladybug-1031 relative to ceres\u0027s \"ITERATIVE_SCHUR\" (in contrast to the difference of \"PoBA\" with \"LM-iterative\" plotted at Fig. 5(b)).",
      "parentUuid": "991fc0b6_fa3cfe08",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b1bea7d_3fc11678",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-24T22:15:58Z",
      "side": 1,
      "message": "Thanks for the pointer, let me take a look at the thesis.",
      "parentUuid": "9afd2b82_a095bb47",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e781fc5_513cad5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-24T22:15:58Z",
      "side": 1,
      "message": "I think it will require some futzing to get the right balance, which is fine, having this as a preconditioner is a more general api anyways. we can assume/introduce a trivial linear solver if need be to make the pure power ba work.",
      "parentUuid": "99b94bbd_6fbe9aa1",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f108551_99e4f9b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T18:19:44Z",
      "side": 1,
      "message": "Mark I have some time to hack these days, so I am wondering if you would you be okay if I take your patch and start restructuring it to be a preconditioner and integrate it into the iterative_schur solver? ",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e06d12b7_86e5bb14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T18:27:34Z",
      "side": 1,
      "message": "I would of course credit you in any of the changes I contribute to ceres solver based on your work.",
      "parentUuid": "2f108551_99e4f9b1",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94d2936a_b9d91aeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-08-04T18:35:10Z",
      "side": 1,
      "message": "Sameer, as you suggested, i made a preconditioner based on power series expansion and, also, added an option to use a few terms of expansion to initialize the pcg. Preliminary tests showed that preconditioning during the iterations of pcg does job no better then schur_jacobi, but using power series expansion to initialize the pcg does indeed improve the quality/time curve on problem-1031-110968. I am currently running tests on subset of bal problems (\u003e1k cameras) to quantify the effects on more exhaustive dataset and to find the best defaults. An estimate of time for tests to finish is about 50h. Meanwhile, i can push the current version.",
      "parentUuid": "2f108551_99e4f9b1",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1668aa43_51e7ed19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-04T18:37:17Z",
      "side": 1,
      "message": "oh you are already on it! awesome. please push the version I can take a closer look at your implementation. since it is now just a preconditioner (we can always run iterative_schur with just one iteration) and a higher tolerance/number of iterations for the preconditioner we should be able to recover the original functionality too no?\n\nit will reduce the amount of changes in the CL where we are introducing a whole new linear solver.",
      "parentUuid": "94d2936a_b9d91aeb",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f256f5d7_d7e59b00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-08-08T21:30:52Z",
      "side": 1,
      "message": "I made quite an underestimate of time to finish all experiment configurations on all problems i picked, so i stopped heating my room. Here are the results for the finished experiments https://drive.google.com/drive/folders/1r2fULHx-Yo8VQwAbyf5fKtqmD4EjXS-8?usp\u003dsharing\n\nUsing iterative_schur solver, schur_jacobi preconditioner as a baseline and varying power series expansion preconditioner (initialization) parameters.\n\nSeems like using initialization is valuable given tight constrains on wall run time. Also, might be interesting to play with \u0027dynamic\u0027 usage of initialization, but clearly this is quite far from math formulation.",
      "parentUuid": "1668aa43_51e7ed19",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25675cbd_956fb11f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-08-08T22:29:31Z",
      "side": 1,
      "message": "interesting numbers, and its not clear from these numbers if the power series expansion always wins either. how many cg iterations are you running?\n\nI am going to take a look at weber\u0027s thesis and then review your code so it will take me a little bit, but I should be able to review it by tomorrow sometime.",
      "parentUuid": "f256f5d7_d7e59b00",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56a3a3b8_529312d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2022-08-08T22:33:29Z",
      "side": 1,
      "message": "max 500 cg iterations",
      "parentUuid": "25675cbd_956fb11f",
      "revId": "bf977794b1d3f7a2253856ec2dbe3cece484f778",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}