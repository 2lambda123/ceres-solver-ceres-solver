{
  "comments": [
    {
      "key": {
        "uuid": "104716d8_c01a657e",
        "filename": "include/ceres/internal/expression_ref.h",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 5002
      },
      "writtenOn": "2019-11-14T10:55:53Z",
      "side": 1,
      "message": "explicit?\nor what implicit conversion are you trying to depend on?",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 15
      },
      "revId": "9e3c8020d398fbcfc8aa25d36701215d8069691d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dbb266c_6d81f6d8",
        "filename": "include/ceres/internal/expression_ref.h",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 6265
      },
      "writtenOn": "2019-11-14T11:15:58Z",
      "side": 1,
      "message": "Done, but added a Jet(double) constructor.",
      "parentUuid": "104716d8_c01a657e",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 15
      },
      "revId": "9e3c8020d398fbcfc8aa25d36701215d8069691d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af727ed3_e4695035",
        "filename": "include/ceres/internal/expression_ref.h",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 5002
      },
      "writtenOn": "2019-11-14T10:55:53Z",
      "side": 1,
      "message": "This means whenever we add a jet overload we need to ensure there is a corresponding CERES_DEFINE_UNARY_FUNCTION_CALL for it no?\n\nwhat about binary functions like pow?",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 32
      },
      "revId": "9e3c8020d398fbcfc8aa25d36701215d8069691d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4ab1a6b_00084856",
        "filename": "include/ceres/internal/expression_ref.h",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 6265
      },
      "writtenOn": "2019-11-14T11:15:58Z",
      "side": 1,
      "message": "Yes, i currently don\u0027t see a way around it. But if someones uses a new function which doesn\u0027t have a CERES_DEFINE_UNARY_FUNCTION_CALL yet it should give a compile error during code generation.",
      "parentUuid": "af727ed3_e4695035",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 32
      },
      "revId": "9e3c8020d398fbcfc8aa25d36701215d8069691d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b1905d9_7f185e37",
        "filename": "include/ceres/internal/expression_ref.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 5002
      },
      "writtenOn": "2019-11-14T10:55:53Z",
      "side": 1,
      "message": "str is bad variable name. \nsame below.",
      "range": {
        "startLine": 213,
        "startChar": 57,
        "endLine": 213,
        "endChar": 58
      },
      "revId": "9e3c8020d398fbcfc8aa25d36701215d8069691d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84c0edd8_a93a9c64",
        "filename": "include/ceres/internal/expression_ref.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 6265
      },
      "writtenOn": "2019-11-14T11:15:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b1905d9_7f185e37",
      "range": {
        "startLine": 213,
        "startChar": 57,
        "endLine": 213,
        "endChar": 58
      },
      "revId": "9e3c8020d398fbcfc8aa25d36701215d8069691d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}