{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e2878280_61048baa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6732
      },
      "writtenOn": "2023-01-10T06:18:29Z",
      "side": 1,
      "message": "Now command `bazel build //...` uses `-std\u003dc++17` option. Without this option bazel build does not working",
      "revId": "f167d9450bb467716d2ced1d4e3f3d629d0e15bd",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "871efcaf_8c4b6570",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-01-10T18:54:33Z",
      "side": 1,
      "message": "I do not think this is a good idea. .bazelrc is something that a user sets up. Also what happens if the user has a .bazelrc in their home directory and then this directory has another one. Are we overriding this silently? do they compose? what are the semantics?",
      "revId": "f167d9450bb467716d2ced1d4e3f3d629d0e15bd",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c466a949_64375ebe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6732
      },
      "writtenOn": "2023-01-11T08:09:19Z",
      "side": 1,
      "message": "What about naming it simply as `bazelrc`? I mean that you may be right and naming as `.bazelrc` is not a good idea. And somebody will probably need a custom `.bazelrc`. But at the same time it is also would be a good idea to provide some initial bazel configuration:\n* `bazelrc` which can be looked at when creating custom one (or a user may just simlink it or copy to `.bazelrc`)(\n* `toolchains`. E.g. for `clang` (yesterday I finished a small quest of adapting https://bazel.build/tutorials/ccp-toolchain-config to `ceres`)",
      "parentUuid": "871efcaf_8c4b6570",
      "revId": "f167d9450bb467716d2ced1d4e3f3d629d0e15bd",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e01bd9d_68cf328e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-01-11T13:40:57Z",
      "side": 1,
      "message": "I think a simple README.md maybe a better idea.",
      "tag": "mailMessageId\u003d\u003cCABqdRUDHr_xfDk7fOp8\u003dMuPC6yJxmJ8NYAEhn5ZkUMRGuY24XA@mail.gmail.com\u003e",
      "revId": "f167d9450bb467716d2ced1d4e3f3d629d0e15bd",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}