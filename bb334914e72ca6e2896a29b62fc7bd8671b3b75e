{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7d91f504_feedc42d",
        "filename": ".github/workflows/windows.yml",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T19:16:34Z",
      "side": 1,
      "message": "drop trailing space.",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0c5368a_4a20d86e",
        "filename": ".github/workflows/windows.yml",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d91f504_feedc42d",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad0efee9_e0c176f3",
        "filename": ".github/workflows/windows.yml",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-10T00:48:44Z",
      "side": 1,
      "message": "Kirill/Di, it would be nice to check if it is indeed an issue with windows section of cudss cmake config file and, maybe, fix it in upstream.",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7398fbd1_cb39ff68",
        "filename": ".github/workflows/windows.yml",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 3415050
      },
      "writtenOn": "2024-05-10T06:18:23Z",
      "side": 1,
      "message": "Yes, it\u0027s a bug which we will fix in the next cudss release. Sorry for the inconveniences it caused!",
      "parentUuid": "ad0efee9_e0c176f3",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "becaccc3_437c2f54",
        "filename": ".github/workflows/windows.yml",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-10T18:14:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7398fbd1_cb39ff68",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "741ec1d0_b107eacc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-10T00:27:11Z",
      "side": 1,
      "message": "Mark, once your discussions with the nvidia folks have stabilized, will you let me know and I will review the CL in detail? \n\nalso I have lost track in the discussion if there are some questions for me.",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a63c3980_e8a8afec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-10T00:48:44Z",
      "side": 1,
      "message": "Sameer, i think that we are expecting an input from you on following:\n\nhttps://ceres-solver-review.googlesource.com/c/ceres-solver/+/25800/comment/3499f9af_ee203c39/\nhttps://ceres-solver-review.googlesource.com/c/ceres-solver/+/25800/comment/fce8cb0a_82b9dc94/\nhttps://ceres-solver-review.googlesource.com/c/ceres-solver/+/25800/comment/e66e9a12_50ffaf36/\n\nRegarding the management of buffers and host\u003c-\u003edevice transfers - i expect feedback from Kirill or Di on current state of this PR. Also, i expect to clarify the issue of cmake config for windows.\n\nAll other issues that were raised to that moment seems to be resolved. Maybe we could add Kirill and Di to reviewers list to make their approval more explicit?",
      "parentUuid": "741ec1d0_b107eacc",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "462d94f3_b727be8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-14T17:43:57Z",
      "side": 1,
      "message": "Dear Mark,\nMy sincere apologies for taking so long to reply. The last week has been a bit chaotic here. I will try to be more prompt in the future.\nSameer",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d263a9d2_03cd5fa4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3415050
      },
      "writtenOn": "2024-05-15T04:14:10Z",
      "side": 1,
      "message": "Overall, the patch looks good to me. I am planning to make more experiments but they can result in later updates/optimizations. So please consider the patch as reviewed by me.",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3c69c1e_d58cbcf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T19:16:34Z",
      "side": 1,
      "message": "Joydeep I am curious what you think about having a single enum CUDA_SPARSE vs introducing a separate enum for CUDSS.",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80bb6ec2_f42de3c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "No worries, Sameer.",
      "parentUuid": "462d94f3_b727be8d",
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62df73ca_89a1f3a2",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 273,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "add a warning here about how SPARSE_SCHUR \u0026 SPARSE_CHOLESKY on the GPU won\u0027t be available.",
      "range": {
        "startLine": 273,
        "startChar": 16,
        "endLine": 273,
        "endChar": 24
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ee8440f_2a88f301",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 273,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62df73ca_89a1f3a2",
      "range": {
        "startLine": 273,
        "startChar": 16,
        "endLine": 273,
        "endChar": 24
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af75bb39_46c824b6",
        "filename": "cmake/CeresCompileOptionsToComponents.cmake",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "I am a bit surprised that we do not already have an entry here for CUDA. Ami I missing something about cuda ?",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 24
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d808f0f1_f6ec9932",
        "filename": "cmake/CeresCompileOptionsToComponents.cmake",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "My guess is it was not there because CUDA_SPARSE was not a feature-complete alternative to other sparse backends (there was no support for direct Cholesky solves).\n\nStill, given that currently the aim is to not have a hard requirement for cuDSS in case if USE_CUDA is requested, listing CUDA_SPARSE as an alternative to e.g. SuiteSparse without dependency on cuDSS availability status seems to be misleading.\n\nWhat would be your suggestion?",
      "parentUuid": "af75bb39_46c824b6",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 24
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7924bd28_23a857e8",
        "filename": "cmake/config.h.in",
        "patchSetId": 5
      },
      "lineNbr": 97,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "like the cmake file earlier, there should have been a case here for CUDA_SPARSE no?",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 27
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "389bc222_d96585b6",
        "filename": "examples/bundle_adjuster.cc",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "No need to change this line",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d74a89b4_68b7668b",
        "filename": "examples/bundle_adjuster.cc",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "389bc222_d96585b6",
      "range": {
        "startLine": 100,
        "startChar": 31,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "416ad7d7_6bb3d3f9",
        "filename": "include/ceres/solver.h",
        "patchSetId": 5
      },
      "lineNbr": 387,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "this fall back sequence doesn\u0027t really make sense anymore, where CPU based sparse linear algebra libraries come before GPU based. In either case I suspect GPU based linear sparse linear algebra should always be an explicit choice. so I would just drop this from here.",
      "range": {
        "startLine": 387,
        "startChar": 13,
        "endLine": 387,
        "endChar": 14
      },
      "fixSuggestions": [
        {
          "fixId": "ec4d9427_b0f47320",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "include/ceres/solver.h",
              "range": {
                "startLine": 381,
                "startChar": 0,
                "endLine": 390,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "include/ceres/solver.h",
              "range": {
                "startLine": 391,
                "startChar": 0,
                "endLine": 392,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "623f0b5b_da417e93",
        "filename": "include/ceres/solver.h",
        "patchSetId": 5
      },
      "lineNbr": 387,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "The exact change that you proposed would lead to variouse tests failing due to implicit assumptions about sparse_linear_algebra_library_type being set to not NO_SPARSE by default. So i reverted this section to its state in master.",
      "parentUuid": "416ad7d7_6bb3d3f9",
      "range": {
        "startLine": 387,
        "startChar": 13,
        "endLine": 387,
        "endChar": 14
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21dfe17a_68443249",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "undef these macros at the bottom of the file.",
      "range": {
        "startLine": 70,
        "startChar": 1,
        "endLine": 70,
        "endChar": 7
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "936a3431_b5988a44",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21dfe17a_68443249",
      "range": {
        "startLine": 70,
        "startChar": 1,
        "endLine": 70,
        "endChar": 7
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfc8e3ae_e5f3db97",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "use the same style of if in all three macros, where you move cudss_error inside the if statement.",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 19
      },
      "fixSuggestions": [
        {
          "fixId": "18250f4a_2a86d731",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 79,
                "startChar": 0,
                "endLine": 81,
                "endChar": 0
              },
              "replacement": "    if (cudssStatus_t cudss_error \u003d IN; cudss_error !\u003d CUDSS_STATUS_SUCCESS) {                             \\\n"
            }
          ]
        }
      ],
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dcb0296_f6d98ec4",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfc8e3ae_e5f3db97",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 19
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6abf23f_a2170c5a",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "ld is a cryptic variable name",
      "range": {
        "startLine": 146,
        "startChar": 30,
        "endLine": 146,
        "endChar": 32
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "182266a3_15791e78",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6abf23f_a2170c5a",
      "range": {
        "startLine": 146,
        "startChar": 30,
        "endLine": 146,
        "endChar": 32
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "138613e4_44576c94",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "this is error prone since in this case x_h_ shouldn\u0027t have been allocated at all no?\nI recommend explicitly storing a scalar to keep track of this size and using it.",
      "range": {
        "startLine": 231,
        "startChar": 36,
        "endLine": 231,
        "endChar": 40
      },
      "fixSuggestions": [
        {
          "fixId": "ab8ce183_01ff5b27",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 230,
                "startChar": 0,
                "endLine": 236,
                "endChar": 0
              },
              "replacement": "    x_d_.CopyToCpu(x_h_.data(), x_h_.size());\n    Convert(x_h_.data(), solution, x_h_.size());\n"
            }
          ]
        }
      ],
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4e7d669_d0284a91",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "I\u0027v added a skip for host buffers allocation in case of double precision and fixed usage of x_h_.size(). \n\nRegarding suggestion to explicitly store the sizes: i believe using the sizes that are already stored by operands is actually less less error-prone. Wdyt?",
      "parentUuid": "138613e4_44576c94",
      "range": {
        "startLine": 231,
        "startChar": 36,
        "endLine": 231,
        "endChar": 40
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969c10dd_cfb77537",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "why we do need three of these buffers? why not just one which is the max of num_rows and num_nonzeros? and then just use it everywhere as needed.\n\nalso this buffer should only be populated when we need to actually perform conversions no?",
      "range": {
        "startLine": 269,
        "startChar": 4,
        "endLine": 269,
        "endChar": 17
      },
      "fixSuggestions": [
        {
          "fixId": "23ace06f_caf99307",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 169,
                "startChar": 0,
                "endLine": 170,
                "endChar": 0
              },
              "replacement": "        lhs_values_d_(context_, num_nonzeros),\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 195,
                "startChar": 0,
                "endLine": 196,
                "endChar": 0
              },
              "replacement": "    ConvertAndCopyToDevice(lhs-\u003evalues(), lhs_values_d_);\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 218,
                "startChar": 0,
                "endLine": 219,
                "endChar": 0
              },
              "replacement": "    ConvertAndCopyToDevice(rhs, rhs_d_);\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 231,
                "startChar": 0,
                "endLine": 232,
                "endChar": 0
              },
              "replacement": "      x_d_.CopyToCpu(solution, x_d_.size());\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 233,
                "startChar": 0,
                "endLine": 235,
                "endChar": 0
              },
              "replacement": "      x_d_.CopyToCpu(x_d_.data(), x_d_.size());\n      Convert(x_d_.data(), solution, x_d_.size());\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 269,
                "startChar": 0,
                "endLine": 273,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 275,
                "startChar": 0,
                "endLine": 276,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 324,
                "startChar": 0,
                "endLine": 327,
                "endChar": 0
              },
              "replacement": "  void ConvertAndCopyToDevice(const double* source, CudaBuffer\u003cScalar\u003e\u0026 destination) {\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 331,
                "startChar": 0,
                "endLine": 333,
                "endChar": 0
              },
              "replacement": "      Convert(source, destination.data(), size);\n      destination.CopyFromCpu(destination.data(), size);\n"
            },
            {
              "path": "internal/ceres/cuda_sparse_cholesky.cc",
              "range": {
                "startLine": 343,
                "startChar": 0,
                "endLine": 346,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d64e593b_16bdfc33",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "In case of double precision, we are skipping the conversion and calling CopyFromCpu() directly on input. This leads to cudaMemcpyAsync() (which is called by CopyFromCpu()) to block a host thread until host-\u003edevice transfer is finished. In such case we are indeed do not need any intermediate host buffers and such case handled by first branch in ConvertAndCopyToDevice().\n\nIn case if single precision is requested, we are performing a conversion (via Eigen maps) of input, storing converted result in pinned host memory buffer. After conversion is performed, we call CopyFromCpu on such pinned host memory buffer which leads to cudaMemcpyAsync() to actually perform asynchronously wrt host thread. This means that after values of lhs are converted and host-\u003edevice transfer is scheduled (in the scope of Factorize()) execution of host thread continues and eventually arriving to the point (in the scope of Solve()) where we handle values of rhs. If we would use the same intermediate pinned host memory buffer for conversion of rhs at this point, we would overwrite the converted values of lhs, host-\u003edevice transfer of which is still not finished at this point. Hence the need for individual buffers.\n\nFollowing nsys timeline visualization (with some additional nvtx range annotations) could be more helpful: https://drive.google.com/file/d/1mllTPJ_yr-IItNAPFb4ZsNW6Eq7Q4rH6/view?usp\u003dsharing\n\nI hope i explained the need for individual buffers, but if such explanation is not clear enough please ask me to elaborate.",
      "parentUuid": "969c10dd_cfb77537",
      "range": {
        "startLine": 269,
        "startChar": 4,
        "endLine": 269,
        "endChar": 17
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d7304cf_12538fc4",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "why take intermediate as an argument? shouldn\u0027t there just be one buffer which is the max of the lhs and rhs size which you use, and it is just private to this class which this method uses?",
      "range": {
        "startLine": 325,
        "startChar": 30,
        "endLine": 325,
        "endChar": 36
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "355fbfbc_7f52fea8",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 366,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "print a warning?",
      "range": {
        "startLine": 366,
        "startChar": 38,
        "endLine": 366,
        "endChar": 55
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e21df549_1a4393bc",
        "filename": "internal/ceres/cuda_sparse_cholesky.cc",
        "patchSetId": 5
      },
      "lineNbr": 366,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Should it be a LOG(FATAL) rather then LOG(WARNING)?",
      "parentUuid": "355fbfbc_7f52fea8",
      "range": {
        "startLine": 366,
        "startChar": 38,
        "endLine": 366,
        "endChar": 55
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e219a7_93280c38",
        "filename": "internal/ceres/cuda_sparse_cholesky.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "this is odd, since CUDSS apparently depends on metis",
      "range": {
        "startLine": 52,
        "startChar": 24,
        "endLine": 52,
        "endChar": 51
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc897220_abc5e503",
        "filename": "internal/ceres/cuda_sparse_cholesky.h",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "It is indeed. The only documentation regarding reordering that i found (https://docs.nvidia.com/cuda/cudss/types.html#cudssconfigparam-t) does not explicitly state the algorithm that is to be used if specific reordering parameter value is chosen, hence i opted for a \"default\" one without any additional options to be given for a user.\n\nIt would be nice if Kirill or Di would provide us more info on that topic.",
      "parentUuid": "d5e219a7_93280c38",
      "range": {
        "startLine": 52,
        "startChar": 24,
        "endLine": 52,
        "endChar": 51
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a8d0895_e6d75f05",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 248,
        "startChar": 50,
        "endLine": 248,
        "endChar": 55
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d4fc88e_3c36ad23",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a8d0895_e6d75f05",
      "range": {
        "startLine": 248,
        "startChar": 50,
        "endLine": 248,
        "endChar": 55
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc07dd79_0a507b7b",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 256,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "I am curious if this is actually feasible and we should explore this next.",
      "range": {
        "startLine": 256,
        "startChar": 20,
        "endLine": 256,
        "endChar": 29
      },
      "fixSuggestions": [
        {
          "fixId": "dc4ce26c_b9a48547",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
              "range": {
                "startLine": 256,
                "startChar": 0,
                "endLine": 257,
                "endChar": 0
              },
              "replacement": "  // TODO(b/286291111): Consider computing A^T*A on device via cuSPARSE\n"
            }
          ]
        }
      ],
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5865f59_4d95a51a",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 256,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc07dd79_0a507b7b",
      "range": {
        "startLine": 256,
        "startChar": 20,
        "endLine": 256,
        "endChar": 29
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c761c3a1_a43a97f0",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "UsingCuda",
      "range": {
        "startLine": 73,
        "startChar": 24,
        "endLine": 73,
        "endChar": 43
      },
      "fixSuggestions": [
        {
          "fixId": "84298d91_62e3c6d3",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "internal/ceres/dynamic_sparse_normal_cholesky_solver.h",
              "range": {
                "startLine": 73,
                "startChar": 0,
                "endLine": 74,
                "endChar": 0
              },
              "replacement": "  LinearSolver::Summary SolveImplUsingCuda(CompressedRowSparseMatrix* A,\n"
            }
          ]
        }
      ],
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f35a6295_8199d797",
        "filename": "internal/ceres/dynamic_sparse_normal_cholesky_solver.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c761c3a1_a43a97f0",
      "range": {
        "startLine": 73,
        "startChar": 24,
        "endLine": 73,
        "endChar": 43
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c65eb06d_20da8dcd",
        "filename": "internal/ceres/generate_bundle_adjustment_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 56,
        "startChar": 32,
        "endLine": 56,
        "endChar": 37
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cc84b12_f2411e7a",
        "filename": "internal/ceres/generate_bundle_adjustment_tests.py",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c65eb06d_20da8dcd",
      "range": {
        "startLine": 56,
        "startChar": 32,
        "endLine": 56,
        "endChar": 37
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edfa4b1d_69e0c8e8",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 119,
        "startChar": 23,
        "endLine": 119,
        "endChar": 28
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3edb096c_99b02209",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edfa4b1d_69e0c8e8",
      "range": {
        "startLine": 119,
        "startChar": 23,
        "endLine": 119,
        "endChar": 28
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96be1a0b_a3de9e05",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "update this to check for CUDA_SPARSE + CUDSS and so on,",
      "range": {
        "startLine": 147,
        "startChar": 5,
        "endLine": 147,
        "endChar": 48
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee353877_e5ce8d18",
        "filename": "internal/ceres/solver.cc",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96be1a0b_a3de9e05",
      "range": {
        "startLine": 147,
        "startChar": 5,
        "endLine": 147,
        "endChar": 48
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c9c5877_868b1745",
        "filename": "internal/ceres/sparse_cholesky_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 275,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 275,
        "startChar": 41,
        "endLine": 275,
        "endChar": 46
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b7a2fe5_09e345d6",
        "filename": "internal/ceres/sparse_cholesky_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 275,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c9c5877_868b1745",
      "range": {
        "startLine": 275,
        "startChar": 41,
        "endLine": 275,
        "endChar": 46
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aea1f36b_5b94881c",
        "filename": "internal/ceres/sparse_normal_cholesky_solver_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 184,
        "startChar": 52,
        "endLine": 184,
        "endChar": 53
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29c16d6c_e4a7bf2c",
        "filename": "internal/ceres/sparse_normal_cholesky_solver_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aea1f36b_5b94881c",
      "range": {
        "startLine": 184,
        "startChar": 52,
        "endLine": 184,
        "endChar": 53
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8023214b_c4381bc5",
        "filename": "internal/ceres/types.cc",
        "patchSetId": 5
      },
      "lineNbr": 434,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-15T20:45:41Z",
      "side": 1,
      "message": "drop",
      "range": {
        "startLine": 434,
        "startChar": 14,
        "endLine": 434,
        "endChar": 19
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1a16f7f_f4bcbdda",
        "filename": "internal/ceres/types.cc",
        "patchSetId": 5
      },
      "lineNbr": 434,
      "author": {
        "id": 6667
      },
      "writtenOn": "2024-05-16T01:22:01Z",
      "side": 1,
      "message": "Removed it here and added in `OptionsAreValidForSparseCholeskyBasedSolver` a check for a case when CUDA_SPARSE requested without cuDSS being available.\n\nImo this is a bit confusing, given the name of this method, but i am not sure what could be a better option (unless we would make a cuDSS a hard requirement for the case of USE_CUDA and thus would not need to use additional checks for cuDSS given !CERES_NO_CUDA).",
      "parentUuid": "8023214b_c4381bc5",
      "range": {
        "startLine": 434,
        "startChar": 14,
        "endLine": 434,
        "endChar": 19
      },
      "revId": "bb334914e72ca6e2896a29b62fc7bd8671b3b75e",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}