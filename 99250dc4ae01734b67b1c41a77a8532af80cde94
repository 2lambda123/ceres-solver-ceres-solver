{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "726fd95a_b9d59a31",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 6612
      },
      "writtenOn": "2024-05-30T20:36:48Z",
      "side": 1,
      "message": "I\u0027d avoid unnecessary integer sign conversion which can potentially overflow, resulting in UB:\n\n\n```suggestion\n  for (std::size_t i \u003d 0; i \u003c blocks.size(); ++i) {\n```\n\nIn particular, Google C++ Style guide [states](https://google.github.io/styleguide/cppguide.html#Integer_Types):\n\n\u003e [...] mixing signedness of integer types is responsible for an equally large class of problems. The best advice we can provide: try to use iterators and containers rather than pointers and sizes, **try not to mix signedness**, and try to avoid unsigned types (except for representing bitfields or modular arithmetic). Do not use an unsigned type merely to assert that a variable is non-negative.",
      "range": {
        "startLine": 56,
        "startChar": 7,
        "endLine": 56,
        "endChar": 10
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66e32c7b_d2ea745a",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-30T22:31:20Z",
      "side": 1,
      "message": "The google style is to use signed integers for loops. Generally speaking loop variables being unsigned variables is frowned upon.",
      "parentUuid": "726fd95a_b9d59a31",
      "range": {
        "startLine": 56,
        "startChar": 7,
        "endLine": 56,
        "endChar": 10
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e196dd4_3238e050",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 6612
      },
      "writtenOn": "2024-05-30T22:55:40Z",
      "side": 1,
      "message": "Sameer, I can only find this note in the guide:\n\u003e We use int very often, for integers we know are not going to be too big, e.g., loop counters. Use plain old int for such things.\n\nIs this what you refer to? I don\u0027t see any mention of standard containers, which you use here.\n\nEither way, it is still a good idea to abstain from integer conversions due to [performance implications](https://www.youtube.com/watch?v\u003djKpIZ4UcaNw).",
      "parentUuid": "66e32c7b_d2ea745a",
      "range": {
        "startLine": 56,
        "startChar": 7,
        "endLine": 56,
        "endChar": 10
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d870e72b_856346ff",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-30T23:34:53Z",
      "side": 1,
      "message": "yes exactly, there is little to no size_t usage inside google. In fact we use ints almost exclusively for all our index based loop. If we are going to go down this path, this is not the change to do it in, it will have to be a large change to the whole code base.",
      "parentUuid": "3e196dd4_3238e050",
      "range": {
        "startLine": 56,
        "startChar": 7,
        "endLine": 56,
        "endChar": 10
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1908823_8b128875",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 6612
      },
      "writtenOn": "2024-05-31T00:08:58Z",
      "side": 1,
      "message": "Agreed.",
      "parentUuid": "d870e72b_856346ff",
      "range": {
        "startLine": 56,
        "startChar": 7,
        "endLine": 56,
        "endChar": 10
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65d8734d_db23087b",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 6612
      },
      "writtenOn": "2024-05-30T20:36:48Z",
      "side": 1,
      "message": "```suggestion\n  const std::size_t num_blocks \u003d blocks.size();\n```",
      "range": {
        "startLine": 107,
        "startChar": 8,
        "endLine": 107,
        "endChar": 11
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386f07ab_2a20d2bd",
        "filename": "internal/ceres/block_random_access_diagonal_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-30T22:31:20Z",
      "side": 1,
      "message": "same here.",
      "parentUuid": "65d8734d_db23087b",
      "range": {
        "startLine": 107,
        "startChar": 8,
        "endLine": 107,
        "endChar": 11
      },
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dc1ddff_b58df969",
        "filename": "internal/ceres/block_random_access_sparse_matrix.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 6612
      },
      "writtenOn": "2024-05-30T20:36:48Z",
      "side": 1,
      "message": "```suggestion\n  using LayoutType \u003d std::unordered_map\u003cstd::int64_t, CellInfo\u003e;\n```",
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cb5ffec_50c7af17",
        "filename": "internal/ceres/block_random_access_sparse_matrix.h",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 5002
      },
      "writtenOn": "2024-05-30T22:53:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dc1ddff_b58df969",
      "revId": "99250dc4ae01734b67b1c41a77a8532af80cde94",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}