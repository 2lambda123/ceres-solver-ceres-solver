{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f545fd7_6e9d6d44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-09-22T19:35:26Z",
      "side": 1,
      "message": "Updated naming \u0026 comments",
      "revId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1ef91f5_0e9f3224",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2023-09-22T19:58:42Z",
      "side": 1,
      "message": "LGTM",
      "revId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e10357e_b5bfc6fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-09-22T21:58:31Z",
      "side": 1,
      "message": "Thanks for the quick patch Dmitriy and the reviewing Joydeep.",
      "revId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91581f4d_e89ffc6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-09-22T22:03:42Z",
      "side": 1,
      "message": "This patch is now causing the following compilation error. cuda_kernels_bsm_to_crs.cu.cc:38",
      "tag": "mailMessageId\u003d\u003cCABqdRUBX8WLZJBm6eDVqc9N85SAQz_Dno0q37whOugzL_0\u003dkbA@mail.gmail.com\u003e",
      "revId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a126e2fe_103cb699",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-09-22T22:08:26Z",
      "side": 1,
      "message": "I think I know the problem. patch incoming.",
      "tag": "mailMessageId\u003d\u003cCABqdRUBXGdnPdTQMSKHrq1bRSbFA353JBCV+ayAaELNL73Be8w@mail.gmail.com\u003e",
      "revId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89f59364_a9c4307b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-09-28T20:46:06Z",
      "side": 1,
      "message": "I think this is still affecting windows builds.\nContextImpl depends on ThreadPool which depends on ConcurentQueue and other things, so passing ContextImpl into methods in ceres_cuda_kernels becomes very painful.\n\n\n\nI have three solutions in mind:\n\n a. Add dependencies of ceres as dependencies of ceres_cuda_kernels (on CMake level); this solves problems with include paths; however, I got the problem with nvcc not supporting nested namespaces (ceres::internal) once again (on windows).\n\n b. Add a CudaContext structure to ceres_cuda_kernels, and add a field of this type  in ContextImpl.\n\n c. Pass boolean flag for cudaMallocAsync support (as it was done in the initial version of CL).\n\nWhat option is the best in your opinion?",
      "parentUuid": "a126e2fe_103cb699",
      "revId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18ea7d1c218275d09715cbdb6d54c2818d678a05",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}