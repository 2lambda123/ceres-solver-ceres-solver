{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "466d1459_bde1e97b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-07-13T12:00:54Z",
      "side": 1,
      "message": "Done. \n\nI am concerned about cranking the tolerances leading to flakiness of the randomized tests, though. I think we should separate out ways to check for \"the absolute best possible numerical accuracy\" from unit tests. It is reasonable to expect all tests to pass on all platforms, but I don\u0027t think we can reasonably expect the same numerical performance on all platforms - unfortunately a lot of factors affect the absolute numerical precision. This article touches on the problem:\nhttps://docs.nvidia.com/cuda/floating-point/index.html",
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f07aeb57_69e7e47b",
        "filename": "docs/source/installation.rst",
        "patchSetId": 18
      },
      "lineNbr": 125,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-13T13:43:07Z",
      "side": 1,
      "message": "I am curious how hard would it be get this going for dense_qr also?",
      "range": {
        "startLine": 125,
        "startChar": 37,
        "endLine": 125,
        "endChar": 38
      },
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "331186c8_56d9da79",
        "filename": "docs/source/installation.rst",
        "patchSetId": 18
      },
      "lineNbr": 125,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-07-13T14:52:37Z",
      "side": 1,
      "message": "Shouldn\u0027t be hard, let\u0027s track that via a GH issue. With this CL, we will have cuda kernel support, so I can also go back and add the QR rank deficiency checking.",
      "parentUuid": "f07aeb57_69e7e47b",
      "range": {
        "startLine": 125,
        "startChar": 37,
        "endLine": 125,
        "endChar": 38
      },
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed70bb98_c84a5bf7",
        "filename": "internal/ceres/cuda_dense_cholesky_test.cc",
        "patchSetId": 18
      },
      "lineNbr": 299,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-13T13:43:07Z",
      "side": 1,
      "message": "This is still too large a fudge factor for my taste, but lets come back to this in a follow up.",
      "range": {
        "startLine": 299,
        "startChar": 76,
        "endLine": 299,
        "endChar": 79
      },
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d430f106_c5c84bdb",
        "filename": "internal/ceres/dense_cholesky.cc",
        "patchSetId": 18
      },
      "lineNbr": 498,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-13T13:43:07Z",
      "side": 1,
      "message": "aren\u0027t you doing +1 iterations here?",
      "range": {
        "startLine": 498,
        "startChar": 23,
        "endLine": 498,
        "endChar": 53
      },
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e795f01_8b6cc539",
        "filename": "internal/ceres/dense_cholesky.cc",
        "patchSetId": 18
      },
      "lineNbr": 498,
      "author": {
        "id": 5135
      },
      "writtenOn": "2022-07-13T14:52:37Z",
      "side": 1,
      "message": "Yes, maybe we should decide on a clear definition and document it. In my mind the first solve is not a \"refinement\" - it is the initial solve. Subsequent iterations are refinements, hence the +1. If you agree, let\u0027s document it accordingly. If not, I can change it to iterations \u003d refinements, but then I\u0027d want to add error checking to ensure that it is at least 1, else the problem won\u0027t get solved.",
      "parentUuid": "d430f106_c5c84bdb",
      "range": {
        "startLine": 498,
        "startChar": 23,
        "endLine": 498,
        "endChar": 53
      },
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c317d2bb_c72e7ec5",
        "filename": "internal/ceres/dense_cholesky.cc",
        "patchSetId": 18
      },
      "lineNbr": 498,
      "author": {
        "id": 5002
      },
      "writtenOn": "2022-07-13T15:53:07Z",
      "side": 1,
      "message": "I went back and looked at https://github.com/ceres-solver/ceres-solver/blob/master/internal/ceres/iterative_refiner.cc\n\nso the first iteration through this loop is actually just a solve, it is only from the second iteration onwards you are refining, so you are doing okay.",
      "parentUuid": "1e795f01_8b6cc539",
      "range": {
        "startLine": 498,
        "startChar": 23,
        "endLine": 498,
        "endChar": 53
      },
      "revId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "88e08cfe7158b59b848df70721d6fa29592af30d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}