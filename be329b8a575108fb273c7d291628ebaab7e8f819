{
  "comments": [
    {
      "key": {
        "uuid": "UaCjinv0",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "2013 only",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaD0XRWM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "no use of scoped_ptr in this file.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UeugEM10",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "indeed in final version of bundler we don\u0027t need scoped_ptr. Will zap it from blender as well. Good catch :)",
      "parentUuid": "UaD0XRWM",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaP0c7Yk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "It seems you should perhaps have a BundleProblem object? which carries various a bunch of this stuff relating to indexing and reasoning and constructing the ceres problem instead of spread out functions..\n\njust a thought.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UegihhzU",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "Well, in libmv it\u0027s a bit more complicated. We\u0027ve got class called Tracks to manage 2D tracks and do have Reconstruction class. They\u0027ve got quite a enough methods not used by this particular application.\n\nSo, could see three ways:\n- Wrapping all the functions into a Bundler class.\n- Using libmv\u0027s Tracks and Reconstruction classes.\n- Leave it as is.\n\nWhatever you\u0027ll think work best.",
      "parentUuid": "UaP0c7Yk",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UiiGzlIM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "I think the functions are not so bad; it\u0027s clear what is acting on what.",
      "parentUuid": "UegihhzU",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UisGAWIY",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Is this true anymore? Or is everything supported now?",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UiqGFZJQ",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Probably should put a comment on tangential and radial that they are combined RADIAL_K1 and RADIAL_K2, etc.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UimGIbKo",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Braces",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UioGLgKc",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Braces everywhere",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaD1pBfg",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "see comment about const and non-const parameters and ordering in google style guide.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UktA9vMw",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Think got it.",
      "parentUuid": "UaD1pBfg",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaH2SnRA",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "all_markers should be const reference since it is not modified \nalso inputs come before outputs.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkrBCOFM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "UaH2SnRA",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaN2ACbQ",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "const int for both arguments.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkpBHNGM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Done. Also went ahead and added const too other function arguments in the file.",
      "parentUuid": "UaN2ACbQ",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaP02rVI",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "consider adding the same flag support as there is in bundle_adjuster.cc so that different options can be played with.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UknAt8JU",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Oki, but rather do it when all the rest issues are solved.",
      "parentUuid": "UaP02rVI",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UiiGctPw",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Let\u0027s not do that in this patch. If we want the equivalent of \"options from flags\" then let\u0027s make that a separate patch that splits out the fairly involved option parsing in bundle_adjuster, and makes it available as options_from_flags.cc or something.",
      "parentUuid": "UaP02rVI",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaB00QUk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 541,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "what is a modal solver?",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UeiimS04",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 541,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "Modal solver is a common name for degenerate motion solver. Examples are tripod camera motion (which we support in blender) and kind of \"dolly\" motion when all the features on the same plane (also used in VFX, but wasn\u0027t so much important for us yet, so is not supported in blender/libmv).",
      "parentUuid": "UaB00QUk",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UklAq7H8",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 541,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "We could just zap modal part from example application to keep it smaller and easier to follow, if you think that makes sense. We do not have tripod problems in data/ yet anyway.",
      "parentUuid": "UeiimS04",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaD0xBVk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "constant_translation",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkjA3aOg",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "UaD0xBVk",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaF2N2e0",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 551,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "constant_translation_parameterization",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaP19zfA",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 561,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "explicit comparison to null.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkhA0ZN8",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 561,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "UaP19zfA",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaB2LYdY",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "is it possible that this may actually happen?",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UekirfxU",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "Yes if we\u0027ll ever add non-final problem (as in in the middle of resection process). In this case some cameras/points still could be not reconstructed and will no need to bundling them.\n\nAlso, if some points failed to be reconstructed (moved behind the camera because of bad motion or bad keyframe selection) such a NULL will happen.",
      "parentUuid": "UaB2LYdY",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaL1zVRw",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 566,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "confusingly named variables, where the \"s\" is hidden in the middle of the variable name.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkvBfoCc",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 566,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "made it all_cameras_R_t and current_camera_R_t. Sounds verbose and clear enough.",
      "parentUuid": "UaL1zVRw",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaN2KyaI",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 575,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "how about camera_extrinsics instead of R_t to go with camera_intrinsics.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UktBknPY",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 575,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Feel strange about this actually. R_t specifies it clearer that block contains rotation and translation. Extrinsics, however, sounds more abstract for me -- it could be rotation+translation, could be transformation matrix..",
      "parentUuid": "UaN2KyaI",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UiuHMfBM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 575,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "I agree with Sergey here. R_t is pretty clear, no?",
      "parentUuid": "UktBknPY",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UisHBeNk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 578,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Weird wrapping; reflow",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaP2HjZc",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "use braces",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkrBZGEU",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Warped body into operator braces. Is it what you meant?",
      "parentUuid": "UaP2HjZc",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UiqHGhO0",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "In libmv, and also ceres, the rule is to use braces always even if it is optional. e.g.\n\nNo:\n\n  if (x)\n    y()\n\nYes\n\n  if (x) {\n    y()\n  }",
      "parentUuid": "UkrBZGEU",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaD2S5dk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "are being refined.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UkpBeFCk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 600,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Oh, my english grammar which is always bad :) Done.",
      "parentUuid": "UaD2S5dk",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UioG8oFU",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 604,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "Set the camera intrinsics that are not to be bundled as constant using some macro trickery.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaL1dFWA",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "why not have a parameter block of size 7 then?",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UemiwQ4E",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "This is rather complex answer.\n\nBack to SSBA days we couldn\u0027t have been refine K3 distortion parameter, but it was possible to set it manually in the interface (using manual calibration). So you need K3 for correct point reprojection, but there\u0027s no option in the interface to refine K3 during bundling.\n\nCurrent parameter block/parameterization matches this. But it\u0027s possible to support K3 refining and that\u0027s what shall be done actually instead of shrinking parameter block. For now it was just harmless and not priority to implement K3 refining..",
      "parentUuid": "UaL1dFWA",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaN1x6eQ",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 633,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "wow you are using all the advanced stuff :)",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UeoiUl9k",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 633,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "Yep, and it works just awesome :)",
      "parentUuid": "UaN1x6eQ",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaP1Pjeg",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 661,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "I would keep this simple and only have support for one problem at a time. Adding a loop does not add anything to the functionality of this binary.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UknBU0Ac",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 661,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-11T12:15:37Z",
      "side": 1,
      "message": "Makes sense. Done.",
      "parentUuid": "UaP1Pjeg",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaB1dIaM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 679,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "braces for the eff statement.\n\nbtw this way of enforcing no intrinsics is  both a bit odd and a bit fragile.",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UeqiRW.g",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 679,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "We could store a flag in the problem file about whether refining is needed instead of such a guess.",
      "parentUuid": "UaB1dIaM",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UimG5jGM",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 679,
      "author": {
        "id": 5005
      },
      "writtenOn": "2013-05-11T19:10:13Z",
      "side": 1,
      "message": "I suspect adding a flag for \"measurements_normalized\" or similar to the file is good. The code can chose to ignore it or not, but by default it can e.g. disable intrinsics refinement.",
      "parentUuid": "UeqiRW.g",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaJ0gUQk",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 685,
      "author": {
        "id": 5002
      },
      "writtenOn": "2013-05-10T16:38:29Z",
      "side": 1,
      "message": "why does this function take all these arguments if you are not doing anything with the resulting arguments? is it because the function itself is a copy from the original code and it has this signature?",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Uesiej-c",
        "filename": "examples/libmv_bundle_adjuster.cc",
        "patchSetId": 1
      },
      "lineNbr": 685,
      "author": {
        "id": 5160
      },
      "writtenOn": "2013-05-10T19:21:29Z",
      "side": 1,
      "message": "Signature is a bit different in libmv. It uses Tracks and Reconstruction classes, as described above. And this function does change cameras and points vectors. We could add average reprojection error before/after bundling to show how it worked. Could also dump refined cameras/points to file/screen? Whatever we want. Just the thing is -- after EuclideanBundleCommonIntrinsics we\u0027ve got refined camera_intrinsics, cameras and points. Only all_markers are not changing, but used for reprojection error calculation.",
      "parentUuid": "UaJ0gUQk",
      "revId": "be329b8a575108fb273c7d291628ebaab7e8f819",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}