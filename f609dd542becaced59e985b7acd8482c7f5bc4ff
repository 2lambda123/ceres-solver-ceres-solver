{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fd13a109_11c5f206",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-16T19:00:22Z",
      "side": 1,
      "message": "I have replaced TripletSparseMatrix with BlockSparseMatrix in BlockRandomAccessSparseMatrix.\n\nAfter modifying BlockSparseMatrix::ToCompressedRowSparseMatrix() to sort-less version, this turned out to be slightly more effective than using TripletSparseMatrix, but not by a huge margin.\n\nI have also tried to fill column indices only for the first row of row block and then copying them, but it results into very small gains, so I decided to stick to a simpler version.\n\nMaking this conversion multi-threaded saves only a couple % of total runtime, I think that it does not worth to overcomplicate this conversion right now.\n\nFinal improvement is ~20..30%, for example on `problem-4585-1324582-pre.txt` (using `./bin/bundle_adjuster  -sparse_linear_algebra_library\u003dsuite_sparse -linear_solver\u003dsparse_schur -input\u003dproblem-4585-1324582-pre.txt -num_iterations\u003d20  -num_threads\u003d28`):\n```\nBefore (TripletSparseMatrix + sort):\n\nTime (in seconds):\nPreprocessor                        61.502462\n\n  Residual only evaluation           4.333457 (20)\n  Jacobian \u0026 residual evaluation     8.741550 (12)\n  Linear solver                    487.757376 (20)\nMinimizer                          506.131221\n\nPostprocessor                        0.695486\nTotal                              568.329171\n--------------------------------------------------\nAfter (BlockSparseMatrix without sort):\n\nTime (in seconds):\nPreprocessor                        61.495169\n\n  Residual only evaluation           4.328399 (20)\n  Jacobian \u0026 residual evaluation     8.632579 (12)\n  Linear solver                    322.538992 (20)\nMinimizer                          340.644099\n\nPostprocessor                        0.640037\nTotal                              402.779307\n```\n\nIt is crucial to have a reasonably modern SuiteSparse for reproducing those results.",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62b69cf5_02ee5fea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-16T20:43:56Z",
      "side": 1,
      "message": "Dmitry,\n\nI will review this in a bit. In the meantime I was t to understand what you mean by a recent version of suitesparse? What version of suitesparse do you recommend? And do you know what has changed in suitesparse recently to make this change work?\n\nI am wondering if this requires openmp support on cholmod, because clang still does not support openmp fully and I want to make sure openmp does not become a requirement for performance.\n\nSameer",
      "tag": "mailMessageId\u003d\u003cCABqdRUDLBqh5LLCMkfb0o3qQZL7Wa+BnJ7nDRtUdDULEvJb5_g@mail.gmail.com\u003e",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4c190ee_2e3dee0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-16T21:52:04Z",
      "side": 1,
      "message": "SuiteSparse 6.x+ should work (I\u0027ve used 7.0.1).\n\n5.x (for some reason this is the version that is shipped with debian/ubuntu, for example) requires rebuilding with non-default options (hence it is simpler to just build the latest-and-greatest).\n\nThe difference is maximum number of threads being a compile-time constant in 5.x (set to 4 there https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/f8ed0196d35a98caacdf660ac55765915f67298d/CHOLMOD/Include/cholmod_core.h#L277 ).\n\nAnd in CHOLMOD 4.0+ (that is SuiteSparse 6.0+) it is a run-time variable:\n * Corresponding entry in changelog: https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/dev/CHOLMOD/Doc/ChangeLog#L30-L31\n * New field in external interface: https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/dev/CHOLMOD/Include/cholmod.h#L1201-L1202\n * And this is how default is defined in config: https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/dev/SuiteSparse_config/Config/SuiteSparse_config.h.in#L68-L69\n\nThreading in CHOLMOD is still done via OpenMP. On my machine there is a huge difference in end-to-end performance of ceres-solver with sparse Cholesky utilizing 4 and 28 threads; and with Cholesky decomposition that fast, conversion via COO format represents a significant portion of time spent in linear solver.\n\nI still expect some performance improvement when CHOLMOD is built without openmp, but it might be outweighted (in terms of relative improvement) by slower Cholesky factorization.",
      "parentUuid": "62b69cf5_02ee5fea",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a83137e_1cf06c13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-16T22:01:28Z",
      "side": 1,
      "message": "Thanks Dmitry. Let me test the patch on a couple of machines and see what kind of performance I am getting.\n\nSameer",
      "tag": "mailMessageId\u003d\u003cCABqdRUCke_eiV0a+nejO4qHCQNHm1sw+JJ1vV+sMTg9ZAjRiPg@mail.gmail.com\u003e",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97482491_3a337c99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T00:52:17Z",
      "side": 1,
      "message": "performance looks good both on the mac as well on linux, I will review carefully tomorrow morning.",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba4c3854_0c0452fa",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "maybe name num_col_blocks as num_blocks, that way the code below will read better.\ne.g. int row_block_id \u003d 0; row_block_id \u003c num_col_blocks; ++row_block_id)",
      "range": {
        "startLine": 56,
        "startChar": 29,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95bae618_83703ef7",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba4c3854_0c0452fa",
      "range": {
        "startLine": 56,
        "startChar": 29,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ae4743_b5f7f728",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "i -\u003e row_block_id",
      "range": {
        "startLine": 68,
        "startChar": 11,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65e8adc7_b0f6c3be",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2ae4743_b5f7f728",
      "range": {
        "startLine": 68,
        "startChar": 11,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a58c7dda_125d0b3d",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "why do you need this? add a comment.",
      "range": {
        "startLine": 72,
        "startChar": 45,
        "endLine": 72,
        "endChar": 50
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e563226_548d16aa",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a58c7dda_125d0b3d",
      "range": {
        "startLine": 72,
        "startChar": 45,
        "endLine": 72,
        "endChar": 50
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a7ffaa5_3bbb8ecb",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "I think we can get rid of cell_values_ entirely since the matrix is a block sparse matrix, we can implement right multiply quite easily by traversing the row blocks.",
      "range": {
        "startLine": 81,
        "startChar": 11,
        "endLine": 81,
        "endChar": 23
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "517f868e_d450a9c5",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a7ffaa5_3bbb8ecb",
      "range": {
        "startLine": 81,
        "startChar": 11,
        "endLine": 81,
        "endChar": 23
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10d53372_353c3b1d",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "this function can be implemented much more simply now in terms of the block sparse matrix (we cannot use bsm::RightMultiply, but we do not need the cell_values_ as an object anymore).",
      "range": {
        "startLine": 119,
        "startChar": 5,
        "endLine": 119,
        "endChar": 34
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88cb7b46_90ff8fc5",
        "filename": "internal/ceres/block_random_access_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10d53372_353c3b1d",
      "range": {
        "startLine": 119,
        "startChar": 5,
        "endLine": 119,
        "endChar": 34
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b4114ee_f13c7136",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "most of our functions take rows and columns, it would be good to keep the same convention here instead of reversing it.",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 16
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dde5ec0a_bcacbc74",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b4114ee_f13c7136",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 16
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4734d562_300c7d1d",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "why rename this?",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3f04eb0_441c21bf",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4734d562_300c7d1d",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b3dcc2d_455326cb",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "why rename this?",
      "range": {
        "startLine": 78,
        "startChar": 25,
        "endLine": 78,
        "endChar": 33
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfbdfac4_2b644633",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b3dcc2d_455326cb",
      "range": {
        "startLine": 78,
        "startChar": 25,
        "endLine": 78,
        "endChar": 33
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12c05271_09537249",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "this loop can use some documentation of the various cases.",
      "range": {
        "startLine": 80,
        "startChar": 22,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6048cb1c_bdee9d5d",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "After splitting function into structure creation and value update, loops seem to be quite less involved.\n\nI\u0027ve added small comments, hopefully everything is more obvious when rows/cols computations and values copying is separated.",
      "parentUuid": "12c05271_09537249",
      "range": {
        "startLine": 80,
        "startChar": 22,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56ade1b8_1be6be36",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "nnz_row_block -\u003e row_block_nnz",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d993bf3c_60ec1178",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56ade1b8_1be6be36",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7291114e_76e3e83e",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "constexpr?",
      "range": {
        "startLine": 89,
        "startChar": 7,
        "endLine": 89,
        "endChar": 8
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20ebab06_e2d870c7",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7291114e_76e3e83e",
      "range": {
        "startLine": 89,
        "startChar": 7,
        "endLine": 89,
        "endChar": 8
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8076c08c_b1e5b2ab",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "this does not seem right, why do you only need to look at the column width of the last cell?",
      "range": {
        "startLine": 98,
        "startChar": 37,
        "endLine": 98,
        "endChar": 45
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb72931c_aa8d25c2",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "`back.position - front.position` \u003d number of non-zeros in row block excluding the last cell. We cannot take a first cell of the next row-block, because it may not exist.\n\nThus we add the size of the last cell manually.\n\nWe have a field for number of non-zeros in row block, but it only gets filled for transposed structure.",
      "parentUuid": "8076c08c_b1e5b2ab",
      "range": {
        "startLine": 98,
        "startChar": 37,
        "endLine": 98,
        "endChar": 45
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "facc7597_96abeaa3",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "row_nnz",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25043eb9_1bb53803",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facc7597_96abeaa3",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd424f15_71c481fc",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "col_block_size",
      "range": {
        "startLine": 106,
        "startChar": 18,
        "endLine": 106,
        "endChar": 26
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4e0ad21_bdfdefd7",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd424f15_71c481fc",
      "range": {
        "startLine": 106,
        "startChar": 18,
        "endLine": 106,
        "endChar": 26
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83f0a1f0_64a4ba6c",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "will this code be a bit more readable if you used eigen matrix maps?",
      "range": {
        "startLine": 108,
        "startChar": 22,
        "endLine": 108,
        "endChar": 31
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9fd075d_ccadb39f",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83f0a1f0_64a4ba6c",
      "range": {
        "startLine": 108,
        "startChar": 22,
        "endLine": 108,
        "endChar": 31
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71aafb28_829ce9b2",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 399,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "why have these functions take a CRSMatrix as input at all? since you are constructing a new matrix and just moving it? isn\u0027t it simpler to just create a new matrix and return it?",
      "range": {
        "startLine": 399,
        "startChar": 23,
        "endLine": 399,
        "endChar": 24
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1912ee85_d93a634a",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 399,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Non-transposed version was already present (and was also creating new matrix).\n\nI\u0027ve split this into creating matrix and updating values, as you\u0027ve suggested below.",
      "parentUuid": "71aafb28_829ce9b2",
      "range": {
        "startLine": 399,
        "startChar": 23,
        "endLine": 399,
        "endChar": 24
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "057328f0_fc3e886f",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "this copy of row and column blocks seems like it can be made into a function.",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b2bed7e_1b1de89e",
        "filename": "internal/ceres/block_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "057328f0_fc3e886f",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc6aac42_e0c916c6",
        "filename": "internal/ceres/compressed_row_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "At this point this function is only being used in tests, should we still update it in this CL?",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 25
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f9df1f3_1a0bcd6c",
        "filename": "internal/ceres/compressed_row_sparse_matrix.cc",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Reverted the whole file",
      "parentUuid": "fc6aac42_e0c916c6",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 25
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e086322_28286434",
        "filename": "internal/ceres/compressed_row_sparse_matrix.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "add a test.",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 27
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d41f881_62099a65",
        "filename": "internal/ceres/compressed_row_sparse_matrix.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "Reverted",
      "parentUuid": "2e086322_28286434",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 27
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "379fffc2_75b155b1",
        "filename": "internal/ceres/schur_complement_solver.cc",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T17:41:19Z",
      "side": 1,
      "message": "this construction and discarding of the CompressedRowSparseMatrix seems wasteful? should we think about the case where the indexing information is updated only once and subsequent updates are only made to the values array?",
      "range": {
        "startLine": 308,
        "startChar": 2,
        "endLine": 308,
        "endChar": 27
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8735171b_9c4ecbbe",
        "filename": "internal/ceres/schur_complement_solver.cc",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-17T20:32:25Z",
      "side": 1,
      "message": "I\u0027ve split BlockSparseMatrix::ToCompressedRowSparseMatrix() into matrix construction and value update.\n\nIt somewhat simplified the code of conversions and made updates possible.\n\nAdded re-using of CRS structure in SparseSchurComplementSolver and VisibilityBasedPreconditioner",
      "parentUuid": "379fffc2_75b155b1",
      "range": {
        "startLine": 308,
        "startChar": 2,
        "endLine": 308,
        "endChar": 27
      },
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}