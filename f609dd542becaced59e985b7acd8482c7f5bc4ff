{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fd13a109_11c5f206",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-16T19:00:22Z",
      "side": 1,
      "message": "I have replaced TripletSparseMatrix with BlockSparseMatrix in BlockRandomAccessSparseMatrix.\n\nAfter modifying BlockSparseMatrix::ToCompressedRowSparseMatrix() to sort-less version, this turned out to be slightly more effective than using TripletSparseMatrix, but not by a huge margin.\n\nI have also tried to fill column indices only for the first row of row block and then copying them, but it results into very small gains, so I decided to stick to a simpler version.\n\nMaking this conversion multi-threaded saves only a couple % of total runtime, I think that it does not worth to overcomplicate this conversion right now.\n\nFinal improvement is ~20..30%, for example on `problem-4585-1324582-pre.txt` (using `./bin/bundle_adjuster  -sparse_linear_algebra_library\u003dsuite_sparse -linear_solver\u003dsparse_schur -input\u003dproblem-4585-1324582-pre.txt -num_iterations\u003d20  -num_threads\u003d28`):\n```\nBefore (TripletSparseMatrix + sort):\n\nTime (in seconds):\nPreprocessor                        61.502462\n\n  Residual only evaluation           4.333457 (20)\n  Jacobian \u0026 residual evaluation     8.741550 (12)\n  Linear solver                    487.757376 (20)\nMinimizer                          506.131221\n\nPostprocessor                        0.695486\nTotal                              568.329171\n--------------------------------------------------\nAfter (BlockSparseMatrix without sort):\n\nTime (in seconds):\nPreprocessor                        61.495169\n\n  Residual only evaluation           4.328399 (20)\n  Jacobian \u0026 residual evaluation     8.632579 (12)\n  Linear solver                    322.538992 (20)\nMinimizer                          340.644099\n\nPostprocessor                        0.640037\nTotal                              402.779307\n```\n\nIt is crucial to have a reasonably modern SuiteSparse for reproducing those results.",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62b69cf5_02ee5fea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-16T20:43:56Z",
      "side": 1,
      "message": "Dmitry,\n\nI will review this in a bit. In the meantime I was t to understand what you mean by a recent version of suitesparse? What version of suitesparse do you recommend? And do you know what has changed in suitesparse recently to make this change work?\n\nI am wondering if this requires openmp support on cholmod, because clang still does not support openmp fully and I want to make sure openmp does not become a requirement for performance.\n\nSameer",
      "tag": "mailMessageId\u003d\u003cCABqdRUDLBqh5LLCMkfb0o3qQZL7Wa+BnJ7nDRtUdDULEvJb5_g@mail.gmail.com\u003e",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4c190ee_2e3dee0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6141
      },
      "writtenOn": "2023-04-16T21:52:04Z",
      "side": 1,
      "message": "SuiteSparse 6.x+ should work (I\u0027ve used 7.0.1).\n\n5.x (for some reason this is the version that is shipped with debian/ubuntu, for example) requires rebuilding with non-default options (hence it is simpler to just build the latest-and-greatest).\n\nThe difference is maximum number of threads being a compile-time constant in 5.x (set to 4 there https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/f8ed0196d35a98caacdf660ac55765915f67298d/CHOLMOD/Include/cholmod_core.h#L277 ).\n\nAnd in CHOLMOD 4.0+ (that is SuiteSparse 6.0+) it is a run-time variable:\n * Corresponding entry in changelog: https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/dev/CHOLMOD/Doc/ChangeLog#L30-L31\n * New field in external interface: https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/dev/CHOLMOD/Include/cholmod.h#L1201-L1202\n * And this is how default is defined in config: https://github.com/DrTimothyAldenDavis/SuiteSparse/blob/dev/SuiteSparse_config/Config/SuiteSparse_config.h.in#L68-L69\n\nThreading in CHOLMOD is still done via OpenMP. On my machine there is a huge difference in end-to-end performance of ceres-solver with sparse Cholesky utilizing 4 and 28 threads; and with Cholesky decomposition that fast, conversion via COO format represents a significant portion of time spent in linear solver.\n\nI still expect some performance improvement when CHOLMOD is built without openmp, but it might be outweighted (in terms of relative improvement) by slower Cholesky factorization.",
      "parentUuid": "62b69cf5_02ee5fea",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a83137e_1cf06c13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-16T22:01:28Z",
      "side": 1,
      "message": "Thanks Dmitry. Let me test the patch on a couple of machines and see what kind of performance I am getting.\n\nSameer",
      "tag": "mailMessageId\u003d\u003cCABqdRUCke_eiV0a+nejO4qHCQNHm1sw+JJ1vV+sMTg9ZAjRiPg@mail.gmail.com\u003e",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97482491_3a337c99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5002
      },
      "writtenOn": "2023-04-17T00:52:17Z",
      "side": 1,
      "message": "performance looks good both on the mac as well on linux, I will review carefully tomorrow morning.",
      "revId": "f609dd542becaced59e985b7acd8482c7f5bc4ff",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}