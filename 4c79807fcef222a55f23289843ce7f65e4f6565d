{
  "comments": [
    {
      "key": {
        "uuid": "a69cf0d8_62d6fc46",
        "filename": "include/ceres/composed_cost_function.h",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-03-21T11:46:31Z",
      "side": 1,
      "message": "Please update to ceres-solver.org (see recent change to update all of these)",
      "revId": "4c79807fcef222a55f23289843ce7f65e4f6565d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a624f0ad_01a13aa1",
        "filename": "include/ceres/composed_cost_function.h",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5002
      },
      "writtenOn": "2015-03-15T22:27:03Z",
      "side": 1,
      "message": "My principal problem with this design is that it binds parameter blocks to cost functions, whereas this binding is supposed to be performed by the problem object. \n\nit also makes reusing the same CostFunction impossible.",
      "revId": "4c79807fcef222a55f23289843ce7f65e4f6565d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "662e7892_6b7ea16b",
        "filename": "include/ceres/composed_cost_function.h",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5220
      },
      "writtenOn": "2015-03-16T00:33:06Z",
      "side": 1,
      "message": "Perhaps I\u0027m misunderstanding something, but the raw pointers are only used to determine the parameter mapping; they are not relied upon in `Evaluate`. As such, I\u0027m not sure I see why the same `ComposedCostFunction cannot be reused --- the caller only has to provide a different `parameter_blocks` argument to `AddResidualBlock`.\n \nE.g. `ComposedCostFunction` is setup with the first set of parameters and the `parameter_blocks` method is called to determine the expected parameter ordering. Then, for each subsequent residual, a `parameter_blocks` vector is constructed/modified with some/all parameters exchanged as necessary (before being passed to `AddResidualBlock`).",
      "parentUuid": "a624f0ad_01a13aa1",
      "revId": "4c79807fcef222a55f23289843ce7f65e4f6565d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a69cf0d8_c2e1b017",
        "filename": "internal/ceres/composed_cost_function.cc",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-03-21T11:46:31Z",
      "side": 1,
      "message": "update",
      "revId": "4c79807fcef222a55f23289843ce7f65e4f6565d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a69cf0d8_a2e6242b",
        "filename": "internal/ceres/composed_cost_function_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 5005
      },
      "writtenOn": "2015-03-21T11:46:31Z",
      "side": 1,
      "message": "update",
      "revId": "4c79807fcef222a55f23289843ce7f65e4f6565d",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": false
    }
  ]
}