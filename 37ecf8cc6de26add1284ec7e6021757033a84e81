{
  "comments": [
    {
      "key": {
        "uuid": "dc9d8088_17a40632",
        "filename": "internal/ceres/concurrent_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "Please extend documentation to show a sketch use case. This object has a state space but is not documented.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef9c0af_cace9c4e",
        "filename": "internal/ceres/concurrent_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "Perhaps rename abandon() or cancel()? There is no resume. Not sure what the right name is.\n\nAlso, what happens to the queue? Since the queue is owned, it\u0027s sorta weird to leave the object in an inconsistent state after.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8f538e6_9d2893cc",
        "filename": "internal/ceres/concurrent_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "precondition required (or at least should be): stop \u003d\u003d false. Not checked.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41ac038f_fcdf3e13",
        "filename": "internal/ceres/concurrent_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "Precondition: !stop -- should probably check for this, or re-start the queue. Needs documentation.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e344b46a_d89aa93b",
        "filename": "internal/ceres/concurrent_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "Perhaps name this matched to the use? work_pending_condition_? work_pending_event_?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d8242f_6a67d01f",
        "filename": "internal/ceres/concurrent_queue_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "What about stop after stop? Push?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "633b51ce_a5fadbec",
        "filename": "internal/ceres/thread_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "Newline after",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce5e0a6_ad735dd3",
        "filename": "internal/ceres/thread_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "No else after return.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "492c1b6e_19357390",
        "filename": "internal/ceres/thread_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "Shouldn\u0027t this lock?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc05c375_22507e31",
        "filename": "internal/ceres/thread_pool.cc",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "Add newlines.\n\nShouldn\u0027t this lock?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92317012_e4299210",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "Please document the state space of this object. Document thread safety-- it appears this object is thread safe, but make that explicit. For example, concurrent Resize() with AddTask().",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "485277a4_2c98eb1f",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:01:16Z",
      "side": 1,
      "message": "num_hardware_threads mentioned in docs but is not anywhere else. Where is that set?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4de156_cc1d2e2d",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:48:56Z",
      "side": 1,
      "message": "Document destructor behaviour. What about tasks in the queue? What if destruction happens while threads are working? Does this block?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a79a3073_be277353",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "What does it do in the case that a reduction is requested?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d56a398_49836875",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "What if the thread pool is resized while workers are working? Is the thread pool resized during the call and guaranteed to be larger upon return? Or is there an async aspect to the behaviour?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "621c8214_9bea2daf",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:48:56Z",
      "side": 1,
      "message": "What if the thread pool is being destructed? What\u0027s the guarantee for that?",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f29207b_d8b58422",
        "filename": "internal/ceres/thread_pool.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "Does it return? Document.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc83d94_cbad2c9a",
        "filename": "internal/ceres/thread_pool_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "I feel these tests aren\u0027t quite convincing enough; what about having a test that mixes AddTask() with Resize(), and also Stop() in the middle? Or some variants of that?\n\nMy opinion is that if Ceres is going to have a thread pool, it should be solid and well tested.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf11b64b_2b8e87ef",
        "filename": "internal/ceres/thread_pool_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-02-20T20:46:15Z",
      "side": 1,
      "message": "Consider having concurrent tasks.",
      "revId": "37ecf8cc6de26add1284ec7e6021757033a84e81",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329",
      "unresolved": true
    }
  ]
}